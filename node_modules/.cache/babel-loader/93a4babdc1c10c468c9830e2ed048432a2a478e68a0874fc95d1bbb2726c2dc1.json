{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/BlotterText.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport * as THREE from 'three';\n\n/**\n * ⚠️ CRITICAL STYLING\n * These styles ensure proper rendering and sizing of the WebGL canvas.\n * The $isHeader prop controls whether the text takes full viewport height.\n * DO NOT modify the width/height calculations or flex properties.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextContainer = styled.div`\n  width: 100%;\n  height: ${props => props.$isHeader ? '100vh' : 'auto'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n  padding: ${props => props.$isHeader ? '0' : '2rem 0'};\n  canvas {\n    width: ${props => props.$isHeader ? '150%' : '100%'} !important;\n    height: ${props => props.$isHeader ? '150%' : '100%'} !important;\n    object-fit: contain;\n    position: ${props => props.$isHeader ? 'absolute' : 'relative'};\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\n/**\n * Fallback component when WebGL is not available\n * Maintains consistent styling with the WebGL version\n */\n_c = TextContainer;\nconst FallbackText = styled.div`\n  width: 100%;\n  height: ${props => props.$isHeader ? '100vh' : 'auto'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: 'Creepster', cursive;\n  font-size: ${props => props.$isHeader ? '4rem' : '2rem'};\n  color: ${props => props.color || '#fff'};\n`;\n_c2 = FallbackText;\n/**\n * ⚠️ CRITICAL SHADER CODE\n * Basic vertex shader that passes UV coordinates to fragment shader\n * DO NOT modify unless you fully understand WebGL shaders\n */\nconst vertexShader = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n`;\n\n/**\n * ⚠️ CRITICAL SHADER CODE\n * Fragment shader that creates the liquid distortion effect\n * Carefully tuned parameters for stability and performance\n * DO NOT modify the following:\n * - UV clamping\n * - Alpha channel handling\n * - Distortion parameters\n */\nconst fragmentShader = `\n  uniform float time;\n  uniform float distortionFactor;\n  uniform float scrollVelocity;\n  uniform vec2 mousePos;\n  uniform vec3 color;\n  uniform sampler2D textTexture;\n  varying vec2 vUv;\n\n  void main() {\n    vec2 uv = vUv;\n    \n    // Calculate distance from mouse with much smaller radius but sharper falloff\n    float dist = distance(mousePos, uv);\n    float influence = smoothstep(0.1, 0.0, dist) * distortionFactor;\n    influence = pow(influence, 0.7); // Sharper falloff but maintain strength\n    \n    // Add scroll-based stretching effect with limited magnitude (max 10% stretch)\n    float scrollStretch = scrollVelocity * 0.05 * (1.0 - uv.y);\n    scrollStretch *= 1.0 + sin(uv.y * 3.14159 * 2.0) * 0.5;\n    scrollStretch = clamp(scrollStretch, -0.1, 0.1);\n    uv.y += scrollStretch;\n    \n    // Add minimal horizontal wave distortion during scroll\n    float scrollWave = sin(uv.y * 20.0 + time * 2.0) * scrollVelocity * 0.005;\n    uv.x += scrollWave;\n    \n    // Create more intense wave effect with higher frequency (mouse interaction)\n    float wave = sin(uv.x * 30.0 + time) * 0.06 * influence;\n    wave += cos(uv.y * 25.0 + time * 0.8) * 0.04 * influence;\n    uv.y += wave;\n    \n    // Create more detailed liquid-like distortion\n    float distortion = sin(uv.x * 20.0 + time * 1.5) * cos(uv.y * 15.0 + time) * influence;\n    distortion += sin(uv.y * 12.0 - time) * 0.02 * influence;\n    uv += distortion * 0.05;\n\n    // Add a tighter ripple effect\n    float ripple = sin(dist * 50.0 - time * 3.0) * 0.03 * influence;\n    uv += ripple;\n\n    // Sample the text texture with clamping\n    vec2 clampedUv = clamp(uv, 0.0, 1.0);\n    vec4 texColor = texture2D(textTexture, clampedUv);\n    \n    // Use the red channel as alpha (since we drew white text on black)\n    float alpha = texColor.r;\n    \n    // Output final color\n    gl_FragColor = vec4(color, alpha);\n  }\n`;\n\n/**\n * ⚠️ CRITICAL INITIALIZATION\n * Static WebGL availability check\n * DO NOT modify this check as it's essential for fallback handling\n */\nconst webGLAvailable = (() => {\n  try {\n    const canvas = document.createElement('canvas');\n    return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * ⚠️ CRITICAL UTILITY\n * Color parsing utility that handles rgba values\n * Essential for proper color handling in WebGL\n */\nconst parseRGBA = color => {\n  if (color.startsWith('rgba')) {\n    const matches = color.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)/);\n    if (matches) {\n      return `rgb(${matches[1]}, ${matches[2]}, ${matches[3]})`;\n    }\n  }\n  return color;\n};\n\n/**\n * Simple font loading check using document.fonts API\n */\nconst checkFontLoaded = async fontFamily => {\n  if ('fonts' in document) {\n    try {\n      await document.fonts.load(`1em ${fontFamily}`);\n      return document.fonts.check(`1em ${fontFamily}`);\n    } catch (e) {\n      console.warn('Font loading check failed:', e);\n      return true; // Continue anyway\n    }\n  }\n  return true; // If document.fonts is not supported, assume font is loaded\n};\n\n/**\n * Utility function for smooth interpolation\n */\nconst lerp = (start, end, factor) => {\n  return start + (end - start) * factor;\n};\n\n// Add error boundary component\nclass WebGLErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.warn('WebGL Error:', error);\n  }\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n    return this.props.children;\n  }\n}\n\n// Add this at the top level\nconst safeRequestAnimationFrame = callback => {\n  try {\n    return window.requestAnimationFrame(callback);\n  } catch (e) {\n    console.warn('RAF error:', e);\n    return window.setTimeout(callback, 16);\n  }\n};\nconst safeCancelAnimationFrame = handle => {\n  try {\n    window.cancelAnimationFrame(handle);\n  } catch (e) {\n    console.warn('Cancel RAF error:', e);\n    window.clearTimeout(handle);\n  }\n};\nexport const BlotterText = ({\n  text,\n  size = 100,\n  fill = '#fff',\n  className,\n  isHeader = false\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const rendererRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const materialRef = useRef(null);\n  const mousePos = useRef({\n    x: 0.5,\n    y: 0.5\n  });\n  const frameRef = useRef();\n  const lastScrollY = useRef(window.scrollY);\n  const scrollVelocity = useRef(0);\n  const targetScrollVelocity = useRef(0);\n  const [hasError, setHasError] = useState(!webGLAvailable);\n  const [fontLoaded, setFontLoaded] = useState(false);\n  const [renderError, setRenderError] = useState(false);\n\n  // Add check for browser environment\n  const isBrowser = typeof window !== 'undefined' && window.document;\n  useEffect(() => {\n    if (!isBrowser) return;\n    let mounted = true;\n    const loadFont = async () => {\n      try {\n        await checkFontLoaded('Creepster');\n        if (mounted) {\n          setFontLoaded(true);\n        }\n      } catch (error) {\n        console.warn('Font loading failed:', error);\n        if (mounted) {\n          setFontLoaded(true);\n        }\n      }\n    };\n    loadFont();\n    return () => {\n      mounted = false;\n    };\n  }, [isBrowser]);\n  useEffect(() => {\n    if (!isBrowser || !containerRef.current || hasError || !fontLoaded || renderError) return;\n    let isDestroyed = false;\n    let animationHandle = null;\n    const cleanup = () => {\n      isDestroyed = true;\n      if (animationHandle !== null) {\n        safeCancelAnimationFrame(animationHandle);\n        animationHandle = null;\n      }\n      if (rendererRef.current) {\n        try {\n          rendererRef.current.dispose();\n          rendererRef.current = null;\n        } catch (e) {\n          console.warn('Renderer cleanup error:', e);\n        }\n      }\n    };\n    try {\n      // Cleanup previous instance if it exists\n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n        rendererRef.current = null;\n      }\n\n      // Verify DOM is available\n      if (!document.body.contains(containerRef.current)) {\n        return;\n      }\n\n      // Get initial dimensions\n      const initialWidth = containerRef.current.clientWidth || window.innerWidth;\n      const initialHeight = isHeader ? window.innerHeight : containerRef.current.clientHeight || window.innerHeight;\n      if (initialWidth === 0 || initialHeight === 0) {\n        console.error('Invalid container dimensions');\n        setHasError(true);\n        return;\n      }\n\n      // Setup Three.js scene\n      const scene = new THREE.Scene();\n      sceneRef.current = scene;\n\n      // Setup camera\n      const camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0.1, 10);\n      camera.position.z = 1;\n      cameraRef.current = camera;\n\n      // Setup renderer with error handling\n      const renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true,\n        powerPreference: 'default',\n        preserveDrawingBuffer: false,\n        failIfMajorPerformanceCaveat: true\n      });\n\n      // Verify WebGL context\n      const gl = renderer.getContext();\n      if (!gl) {\n        throw new Error('Failed to get WebGL context');\n      }\n\n      // Create text texture first\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d', {\n        alpha: true\n      });\n      if (!ctx) {\n        throw new Error('Failed to get 2D context');\n      }\n\n      // Set canvas size based on container size with better aspect ratio handling\n      const containerAspect = initialWidth / initialHeight;\n\n      // Use consistent square texture size for better text quality\n      const textureSize = 2048;\n      canvas.width = textureSize;\n      canvas.height = textureSize;\n\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Calculate font size based on texture size and aspect ratio\n      const baseFontSize = isHeader ? Math.floor(textureSize * 0.2) // Reduced from 0.25 for better clarity\n      : Math.floor(textureSize * 0.3); // Reduced from 0.4\n\n      // Set initial font\n      ctx.font = `bold ${baseFontSize}px Creepster`;\n      ctx.fillStyle = '#ffffff';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n\n      // Measure text and calculate scaling\n      const textMetrics = ctx.measureText(text);\n      const textWidth = textMetrics.width;\n      const textHeight = baseFontSize;\n\n      // Calculate maximum dimensions while maintaining aspect ratio\n      const maxWidth = textureSize * 0.7; // Reduced from 0.8 for better margins\n      const maxHeight = textureSize * 0.7 / containerAspect;\n\n      // Calculate scale based on both width and height constraints\n      const scaleX = maxWidth / textWidth;\n      const scaleY = maxHeight / textHeight;\n      const scale = Math.min(scaleX, scaleY);\n\n      // Apply final font size\n      const finalFontSize = Math.floor(baseFontSize * scale);\n      ctx.font = `bold ${finalFontSize}px Creepster`;\n\n      // Draw text in center with proper vertical positioning\n      const centerX = canvas.width / 2;\n      const centerY = canvas.height / 2;\n      ctx.fillText(text, centerX, centerY);\n\n      // Create texture with proper filtering\n      const texture = new THREE.Texture(canvas);\n      texture.needsUpdate = true;\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      texture.format = THREE.RGBAFormat;\n      texture.type = THREE.UnsignedByteType;\n\n      // Initialize renderer with proper size\n      renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n      renderer.setSize(initialWidth, initialHeight);\n\n      // Clear container and append canvas\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n      containerRef.current.appendChild(renderer.domElement);\n\n      // Create material with adjusted plane geometry\n      const material = new THREE.ShaderMaterial({\n        uniforms: {\n          time: {\n            value: 0\n          },\n          distortionFactor: {\n            value: 0\n          },\n          scrollVelocity: {\n            value: 0\n          },\n          mousePos: {\n            value: new THREE.Vector2(0.5, 0.5)\n          },\n          color: {\n            value: new THREE.Color(fill)\n          },\n          textTexture: {\n            value: texture\n          }\n        },\n        vertexShader,\n        fragmentShader,\n        transparent: true,\n        depthWrite: false,\n        depthTest: false\n      });\n      materialRef.current = material;\n\n      // Create mesh with proper aspect ratio\n      const planeWidth = 2;\n      const planeHeight = planeWidth / containerAspect;\n      const geometry = new THREE.PlaneGeometry(planeWidth, planeHeight, 1, 1);\n      const mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n      let lastTime = performance.now();\n      let deltaTime = 0;\n      const animate = () => {\n        if (isDestroyed || !material || !renderer || !scene || !camera) {\n          cleanup();\n          return;\n        }\n        try {\n          const currentTime = performance.now();\n          deltaTime = (currentTime - lastTime) / 1000;\n          lastTime = currentTime;\n          scrollVelocity.current = lerp(scrollVelocity.current, targetScrollVelocity.current, Math.min(1, deltaTime * 4));\n          material.uniforms.time.value += deltaTime;\n          material.uniforms.mousePos.value.set(mousePos.current.x, mousePos.current.y);\n          material.uniforms.scrollVelocity.value = scrollVelocity.current;\n          targetScrollVelocity.current *= Math.pow(0.98, deltaTime * 60);\n          renderer.render(scene, camera);\n          animationHandle = safeRequestAnimationFrame(animate);\n        } catch (error) {\n          console.warn('Animation error:', error);\n          setRenderError(true);\n          cleanup();\n        }\n      };\n      animationHandle = safeRequestAnimationFrame(animate);\n\n      // Handle mouse movement\n      const handleMouseMove = e => {\n        var _containerRef$current;\n        const rect = (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.getBoundingClientRect();\n        if (!rect) return;\n        mousePos.current = {\n          x: (e.clientX - rect.left) / rect.width,\n          y: 1 - (e.clientY - rect.top) / rect.height\n        };\n        if (materialRef.current) {\n          const dist = Math.hypot(mousePos.current.x - 0.5, mousePos.current.y - 0.5);\n          // Increase maximum distortion for more intense effect\n          materialRef.current.uniforms.distortionFactor.value = Math.min(dist * 4, 2.0);\n        }\n      };\n      window.addEventListener('mousemove', handleMouseMove);\n\n      // Handle resize\n      const handleResize = () => {\n        if (!containerRef.current || !renderer || !camera) return;\n        const newWidth = containerRef.current.clientWidth;\n        const newHeight = isHeader ? window.innerHeight : containerRef.current.clientHeight;\n        const newAspect = newWidth / newHeight;\n        renderer.setSize(newWidth, newHeight);\n        camera.left = -1;\n        camera.right = 1;\n        camera.top = 1 / newAspect;\n        camera.bottom = -1 / newAspect;\n        camera.updateProjectionMatrix();\n      };\n      window.addEventListener('resize', handleResize);\n      handleResize();\n\n      // Improved scroll handler with better velocity calculation\n      let lastScrollTime = performance.now();\n      let lastScrollDelta = 0;\n      const handleScroll = () => {\n        const currentScrollY = window.scrollY;\n        const currentTime = performance.now();\n        const timeDelta = (currentTime - lastScrollTime) / 1000; // Convert to seconds\n        const scrollDelta = currentScrollY - lastScrollY.current;\n        if (timeDelta > 0) {\n          // Calculate instantaneous velocity with reduced sensitivity\n          const instantVelocity = scrollDelta / timeDelta / window.innerHeight;\n\n          // Smooth out sudden changes in velocity\n          const smoothedVelocity = lerp(lastScrollDelta / timeDelta / window.innerHeight, instantVelocity, 0.3); // Reduced from 0.5\n\n          // Update target velocity with reduced clamping\n          targetScrollVelocity.current = Math.max(-1.5, Math.min(1.5, smoothedVelocity)); // Reduced from ±4 to ±1.5\n\n          lastScrollDelta = scrollDelta;\n          lastScrollTime = currentTime;\n        }\n        lastScrollY.current = currentScrollY;\n      };\n\n      // Add scroll listener\n      window.addEventListener('scroll', handleScroll, {\n        passive: true\n      });\n\n      // Handle WebGL context loss\n      const handleContextLost = () => {\n        isDestroyed = true;\n        setHasError(true);\n      };\n      const handleContextRestored = () => {\n        isDestroyed = false;\n        setHasError(false);\n      };\n      renderer.domElement.addEventListener('webglcontextlost', handleContextLost);\n      renderer.domElement.addEventListener('webglcontextrestored', handleContextRestored);\n      return () => {\n        cleanup();\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('resize', handleResize);\n        window.removeEventListener('scroll', handleScroll);\n        renderer.domElement.removeEventListener('webglcontextlost', handleContextLost);\n        renderer.domElement.removeEventListener('webglcontextrestored', handleContextRestored);\n        renderer.dispose();\n        geometry.dispose();\n        material.dispose();\n        texture.dispose();\n      };\n    } catch (e) {\n      console.error('Setup error:', e);\n      setHasError(true);\n      cleanup();\n    }\n  }, [text, size, fill, isHeader, hasError, fontLoaded, isBrowser, renderError]);\n  if (!isBrowser || !fontLoaded || hasError || renderError) {\n    return /*#__PURE__*/_jsxDEV(FallbackText, {\n      $isHeader: isHeader,\n      className: className,\n      color: fill,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(WebGLErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(TextContainer, {\n      ref: containerRef,\n      className: className,\n      $isHeader: isHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 595,\n    columnNumber: 5\n  }, this);\n};\n_s(BlotterText, \"4jCOVtbNS3oGUuKhGnZWcj/DW0g=\");\n_c3 = BlotterText;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TextContainer\");\n$RefreshReg$(_c2, \"FallbackText\");\n$RefreshReg$(_c3, \"BlotterText\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","THREE","jsxDEV","_jsxDEV","TextContainer","div","props","$isHeader","_c","FallbackText","color","_c2","vertexShader","fragmentShader","webGLAvailable","canvas","document","createElement","window","WebGLRenderingContext","getContext","e","parseRGBA","startsWith","matches","match","checkFontLoaded","fontFamily","fonts","load","check","console","warn","lerp","start","end","factor","WebGLErrorBoundary","Component","constructor","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","render","children","safeRequestAnimationFrame","callback","requestAnimationFrame","setTimeout","safeCancelAnimationFrame","handle","cancelAnimationFrame","clearTimeout","BlotterText","text","size","fill","className","isHeader","_s","containerRef","rendererRef","sceneRef","cameraRef","materialRef","mousePos","x","y","frameRef","lastScrollY","scrollY","scrollVelocity","targetScrollVelocity","setHasError","fontLoaded","setFontLoaded","renderError","setRenderError","isBrowser","mounted","loadFont","current","isDestroyed","animationHandle","cleanup","dispose","body","contains","initialWidth","clientWidth","innerWidth","initialHeight","innerHeight","clientHeight","scene","Scene","camera","OrthographicCamera","position","z","renderer","WebGLRenderer","antialias","alpha","powerPreference","preserveDrawingBuffer","failIfMajorPerformanceCaveat","gl","Error","ctx","containerAspect","textureSize","width","height","clearRect","baseFontSize","Math","floor","font","fillStyle","textAlign","textBaseline","textMetrics","measureText","textWidth","textHeight","maxWidth","maxHeight","scaleX","scaleY","scale","min","finalFontSize","centerX","centerY","fillText","texture","Texture","needsUpdate","minFilter","LinearFilter","magFilter","format","RGBAFormat","type","UnsignedByteType","setPixelRatio","devicePixelRatio","setSize","firstChild","removeChild","appendChild","domElement","material","ShaderMaterial","uniforms","time","value","distortionFactor","Vector2","Color","textTexture","transparent","depthWrite","depthTest","planeWidth","planeHeight","geometry","PlaneGeometry","mesh","Mesh","add","lastTime","performance","now","deltaTime","animate","currentTime","set","pow","handleMouseMove","_containerRef$current","rect","getBoundingClientRect","clientX","left","clientY","top","dist","hypot","addEventListener","handleResize","newWidth","newHeight","newAspect","right","bottom","updateProjectionMatrix","lastScrollTime","lastScrollDelta","handleScroll","currentScrollY","timeDelta","scrollDelta","instantVelocity","smoothedVelocity","max","passive","handleContextLost","handleContextRestored","removeEventListener","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c3","$RefreshReg$"],"sources":["/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/BlotterText.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport * as THREE from 'three';\n\n/**\n * ⚠️ CRITICAL STYLING\n * These styles ensure proper rendering and sizing of the WebGL canvas.\n * The $isHeader prop controls whether the text takes full viewport height.\n * DO NOT modify the width/height calculations or flex properties.\n */\nconst TextContainer = styled.div<{ $isHeader?: boolean }>`\n  width: 100%;\n  height: ${props => props.$isHeader ? '100vh' : 'auto'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n  padding: ${props => props.$isHeader ? '0' : '2rem 0'};\n  canvas {\n    width: ${props => props.$isHeader ? '150%' : '100%'} !important;\n    height: ${props => props.$isHeader ? '150%' : '100%'} !important;\n    object-fit: contain;\n    position: ${props => props.$isHeader ? 'absolute' : 'relative'};\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\n/**\n * Fallback component when WebGL is not available\n * Maintains consistent styling with the WebGL version\n */\nconst FallbackText = styled.div<{ $isHeader?: boolean }>`\n  width: 100%;\n  height: ${props => props.$isHeader ? '100vh' : 'auto'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: 'Creepster', cursive;\n  font-size: ${props => props.$isHeader ? '4rem' : '2rem'};\n  color: ${props => props.color || '#fff'};\n`;\n\ninterface BlotterTextProps {\n  text: string;\n  size?: number;\n  fill?: string;\n  className?: string;\n  isHeader?: boolean;\n}\n\n/**\n * ⚠️ CRITICAL SHADER CODE\n * Basic vertex shader that passes UV coordinates to fragment shader\n * DO NOT modify unless you fully understand WebGL shaders\n */\nconst vertexShader = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n`;\n\n/**\n * ⚠️ CRITICAL SHADER CODE\n * Fragment shader that creates the liquid distortion effect\n * Carefully tuned parameters for stability and performance\n * DO NOT modify the following:\n * - UV clamping\n * - Alpha channel handling\n * - Distortion parameters\n */\nconst fragmentShader = `\n  uniform float time;\n  uniform float distortionFactor;\n  uniform float scrollVelocity;\n  uniform vec2 mousePos;\n  uniform vec3 color;\n  uniform sampler2D textTexture;\n  varying vec2 vUv;\n\n  void main() {\n    vec2 uv = vUv;\n    \n    // Calculate distance from mouse with much smaller radius but sharper falloff\n    float dist = distance(mousePos, uv);\n    float influence = smoothstep(0.1, 0.0, dist) * distortionFactor;\n    influence = pow(influence, 0.7); // Sharper falloff but maintain strength\n    \n    // Add scroll-based stretching effect with limited magnitude (max 10% stretch)\n    float scrollStretch = scrollVelocity * 0.05 * (1.0 - uv.y);\n    scrollStretch *= 1.0 + sin(uv.y * 3.14159 * 2.0) * 0.5;\n    scrollStretch = clamp(scrollStretch, -0.1, 0.1);\n    uv.y += scrollStretch;\n    \n    // Add minimal horizontal wave distortion during scroll\n    float scrollWave = sin(uv.y * 20.0 + time * 2.0) * scrollVelocity * 0.005;\n    uv.x += scrollWave;\n    \n    // Create more intense wave effect with higher frequency (mouse interaction)\n    float wave = sin(uv.x * 30.0 + time) * 0.06 * influence;\n    wave += cos(uv.y * 25.0 + time * 0.8) * 0.04 * influence;\n    uv.y += wave;\n    \n    // Create more detailed liquid-like distortion\n    float distortion = sin(uv.x * 20.0 + time * 1.5) * cos(uv.y * 15.0 + time) * influence;\n    distortion += sin(uv.y * 12.0 - time) * 0.02 * influence;\n    uv += distortion * 0.05;\n\n    // Add a tighter ripple effect\n    float ripple = sin(dist * 50.0 - time * 3.0) * 0.03 * influence;\n    uv += ripple;\n\n    // Sample the text texture with clamping\n    vec2 clampedUv = clamp(uv, 0.0, 1.0);\n    vec4 texColor = texture2D(textTexture, clampedUv);\n    \n    // Use the red channel as alpha (since we drew white text on black)\n    float alpha = texColor.r;\n    \n    // Output final color\n    gl_FragColor = vec4(color, alpha);\n  }\n`;\n\n/**\n * ⚠️ CRITICAL INITIALIZATION\n * Static WebGL availability check\n * DO NOT modify this check as it's essential for fallback handling\n */\nconst webGLAvailable = (() => {\n  try {\n    const canvas = document.createElement('canvas');\n    return !!(window.WebGLRenderingContext && \n      (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * ⚠️ CRITICAL UTILITY\n * Color parsing utility that handles rgba values\n * Essential for proper color handling in WebGL\n */\nconst parseRGBA = (color: string): string => {\n  if (color.startsWith('rgba')) {\n    const matches = color.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)/);\n    if (matches) {\n      return `rgb(${matches[1]}, ${matches[2]}, ${matches[3]})`;\n    }\n  }\n  return color;\n};\n\n/**\n * Simple font loading check using document.fonts API\n */\nconst checkFontLoaded = async (fontFamily: string): Promise<boolean> => {\n  if ('fonts' in document) {\n    try {\n      await document.fonts.load(`1em ${fontFamily}`);\n      return document.fonts.check(`1em ${fontFamily}`);\n    } catch (e) {\n      console.warn('Font loading check failed:', e);\n      return true; // Continue anyway\n    }\n  }\n  return true; // If document.fonts is not supported, assume font is loaded\n};\n\n/**\n * Utility function for smooth interpolation\n */\nconst lerp = (start: number, end: number, factor: number) => {\n  return start + (end - start) * factor;\n};\n\n// Add error boundary component\nclass WebGLErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.warn('WebGL Error:', error);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n    return this.props.children;\n  }\n}\n\n// Add this at the top level\nconst safeRequestAnimationFrame = (callback: FrameRequestCallback): number => {\n  try {\n    return window.requestAnimationFrame(callback);\n  } catch (e) {\n    console.warn('RAF error:', e);\n    return window.setTimeout(callback, 16);\n  }\n};\n\nconst safeCancelAnimationFrame = (handle: number) => {\n  try {\n    window.cancelAnimationFrame(handle);\n  } catch (e) {\n    console.warn('Cancel RAF error:', e);\n    window.clearTimeout(handle);\n  }\n};\n\nexport const BlotterText: React.FC<BlotterTextProps> = ({ \n  text, \n  size = 100,\n  fill = '#fff',\n  className,\n  isHeader = false\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const rendererRef = useRef<THREE.WebGLRenderer | null>(null);\n  const sceneRef = useRef<THREE.Scene | null>(null);\n  const cameraRef = useRef<THREE.OrthographicCamera | null>(null);\n  const materialRef = useRef<THREE.ShaderMaterial | null>(null);\n  const mousePos = useRef<{ x: number; y: number }>({ x: 0.5, y: 0.5 });\n  const frameRef = useRef<number>();\n  const lastScrollY = useRef(window.scrollY);\n  const scrollVelocity = useRef(0);\n  const targetScrollVelocity = useRef(0);\n  const [hasError, setHasError] = useState(!webGLAvailable);\n  const [fontLoaded, setFontLoaded] = useState(false);\n  const [renderError, setRenderError] = useState(false);\n\n  // Add check for browser environment\n  const isBrowser = typeof window !== 'undefined' && window.document;\n\n  useEffect(() => {\n    if (!isBrowser) return;\n    \n    let mounted = true;\n\n    const loadFont = async () => {\n      try {\n        await checkFontLoaded('Creepster');\n        if (mounted) {\n          setFontLoaded(true);\n        }\n      } catch (error) {\n        console.warn('Font loading failed:', error);\n        if (mounted) {\n          setFontLoaded(true);\n        }\n      }\n    };\n\n    loadFont();\n\n    return () => {\n      mounted = false;\n    };\n  }, [isBrowser]);\n\n  useEffect(() => {\n    if (!isBrowser || !containerRef.current || hasError || !fontLoaded || renderError) return;\n\n    let isDestroyed = false;\n    let animationHandle: number | null = null;\n\n    const cleanup = () => {\n      isDestroyed = true;\n      if (animationHandle !== null) {\n        safeCancelAnimationFrame(animationHandle);\n        animationHandle = null;\n      }\n      if (rendererRef.current) {\n        try {\n          rendererRef.current.dispose();\n          rendererRef.current = null;\n        } catch (e) {\n          console.warn('Renderer cleanup error:', e);\n        }\n      }\n    };\n\n    try {\n      // Cleanup previous instance if it exists\n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n        rendererRef.current = null;\n      }\n\n      // Verify DOM is available\n      if (!document.body.contains(containerRef.current)) {\n        return;\n      }\n\n      // Get initial dimensions\n      const initialWidth = containerRef.current.clientWidth || window.innerWidth;\n      const initialHeight = isHeader ? window.innerHeight : (containerRef.current.clientHeight || window.innerHeight);\n      \n      if (initialWidth === 0 || initialHeight === 0) {\n        console.error('Invalid container dimensions');\n        setHasError(true);\n        return;\n      }\n\n      // Setup Three.js scene\n      const scene = new THREE.Scene();\n      sceneRef.current = scene;\n\n      // Setup camera\n      const camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0.1, 10);\n      camera.position.z = 1;\n      cameraRef.current = camera;\n\n      // Setup renderer with error handling\n      const renderer = new THREE.WebGLRenderer({ \n        antialias: true, \n        alpha: true,\n        powerPreference: 'default',\n        preserveDrawingBuffer: false,\n        failIfMajorPerformanceCaveat: true\n      });\n\n      // Verify WebGL context\n      const gl = renderer.getContext();\n      if (!gl) {\n        throw new Error('Failed to get WebGL context');\n      }\n\n      // Create text texture first\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d', { alpha: true });\n      if (!ctx) {\n        throw new Error('Failed to get 2D context');\n      }\n\n      // Set canvas size based on container size with better aspect ratio handling\n      const containerAspect = initialWidth / initialHeight;\n      \n      // Use consistent square texture size for better text quality\n      const textureSize = 2048;\n      canvas.width = textureSize;\n      canvas.height = textureSize;\n      \n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Calculate font size based on texture size and aspect ratio\n      const baseFontSize = isHeader \n        ? Math.floor(textureSize * 0.2)  // Reduced from 0.25 for better clarity\n        : Math.floor(textureSize * 0.3);  // Reduced from 0.4\n      \n      // Set initial font\n      ctx.font = `bold ${baseFontSize}px Creepster`;\n      ctx.fillStyle = '#ffffff';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      \n      // Measure text and calculate scaling\n      const textMetrics = ctx.measureText(text);\n      const textWidth = textMetrics.width;\n      const textHeight = baseFontSize;\n      \n      // Calculate maximum dimensions while maintaining aspect ratio\n      const maxWidth = textureSize * 0.7;  // Reduced from 0.8 for better margins\n      const maxHeight = textureSize * 0.7 / containerAspect;\n      \n      // Calculate scale based on both width and height constraints\n      const scaleX = maxWidth / textWidth;\n      const scaleY = maxHeight / textHeight;\n      const scale = Math.min(scaleX, scaleY);\n      \n      // Apply final font size\n      const finalFontSize = Math.floor(baseFontSize * scale);\n      ctx.font = `bold ${finalFontSize}px Creepster`;\n      \n      // Draw text in center with proper vertical positioning\n      const centerX = canvas.width / 2;\n      const centerY = canvas.height / 2;\n      ctx.fillText(text, centerX, centerY);\n\n      // Create texture with proper filtering\n      const texture = new THREE.Texture(canvas);\n      texture.needsUpdate = true;\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      texture.format = THREE.RGBAFormat;\n      texture.type = THREE.UnsignedByteType;\n\n      // Initialize renderer with proper size\n      renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n      renderer.setSize(initialWidth, initialHeight);\n      \n      // Clear container and append canvas\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n      containerRef.current.appendChild(renderer.domElement);\n\n      // Create material with adjusted plane geometry\n      const material = new THREE.ShaderMaterial({\n        uniforms: {\n          time: { value: 0 },\n          distortionFactor: { value: 0 },\n          scrollVelocity: { value: 0 },\n          mousePos: { value: new THREE.Vector2(0.5, 0.5) },\n          color: { value: new THREE.Color(fill) },\n          textTexture: { value: texture }\n        },\n        vertexShader,\n        fragmentShader,\n        transparent: true,\n        depthWrite: false,\n        depthTest: false\n      });\n      materialRef.current = material;\n\n      // Create mesh with proper aspect ratio\n      const planeWidth = 2;\n      const planeHeight = planeWidth / containerAspect;\n      const geometry = new THREE.PlaneGeometry(planeWidth, planeHeight, 1, 1);\n      const mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n\n      let lastTime = performance.now();\n      let deltaTime = 0;\n      \n      const animate = () => {\n        if (isDestroyed || !material || !renderer || !scene || !camera) {\n          cleanup();\n          return;\n        }\n        \n        try {\n          const currentTime = performance.now();\n          deltaTime = (currentTime - lastTime) / 1000;\n          lastTime = currentTime;\n\n          scrollVelocity.current = lerp(\n            scrollVelocity.current,\n            targetScrollVelocity.current,\n            Math.min(1, deltaTime * 4)\n          );\n\n          material.uniforms.time.value += deltaTime;\n          material.uniforms.mousePos.value.set(mousePos.current.x, mousePos.current.y);\n          material.uniforms.scrollVelocity.value = scrollVelocity.current;\n          \n          targetScrollVelocity.current *= Math.pow(0.98, deltaTime * 60);\n          \n          renderer.render(scene, camera);\n          animationHandle = safeRequestAnimationFrame(animate);\n        } catch (error) {\n          console.warn('Animation error:', error);\n          setRenderError(true);\n          cleanup();\n        }\n      };\n\n      animationHandle = safeRequestAnimationFrame(animate);\n\n      // Handle mouse movement\n      const handleMouseMove = (e: MouseEvent) => {\n        const rect = containerRef.current?.getBoundingClientRect();\n        if (!rect) return;\n\n        mousePos.current = {\n          x: (e.clientX - rect.left) / rect.width,\n          y: 1 - (e.clientY - rect.top) / rect.height\n        };\n\n        if (materialRef.current) {\n          const dist = Math.hypot(\n            mousePos.current.x - 0.5,\n            mousePos.current.y - 0.5\n          );\n          // Increase maximum distortion for more intense effect\n          materialRef.current.uniforms.distortionFactor.value = Math.min(dist * 4, 2.0);\n        }\n      };\n\n      window.addEventListener('mousemove', handleMouseMove);\n\n      // Handle resize\n      const handleResize = () => {\n        if (!containerRef.current || !renderer || !camera) return;\n        \n        const newWidth = containerRef.current.clientWidth;\n        const newHeight = isHeader ? window.innerHeight : containerRef.current.clientHeight;\n        const newAspect = newWidth / newHeight;\n        \n        renderer.setSize(newWidth, newHeight);\n        \n        camera.left = -1;\n        camera.right = 1;\n        camera.top = 1 / newAspect;\n        camera.bottom = -1 / newAspect;\n        camera.updateProjectionMatrix();\n      };\n\n      window.addEventListener('resize', handleResize);\n      handleResize();\n\n      // Improved scroll handler with better velocity calculation\n      let lastScrollTime = performance.now();\n      let lastScrollDelta = 0;\n      \n      const handleScroll = () => {\n        const currentScrollY = window.scrollY;\n        const currentTime = performance.now();\n        const timeDelta = (currentTime - lastScrollTime) / 1000; // Convert to seconds\n        const scrollDelta = currentScrollY - lastScrollY.current;\n        \n        if (timeDelta > 0) {\n          // Calculate instantaneous velocity with reduced sensitivity\n          const instantVelocity = scrollDelta / timeDelta / window.innerHeight;\n          \n          // Smooth out sudden changes in velocity\n          const smoothedVelocity = lerp(lastScrollDelta / timeDelta / window.innerHeight, instantVelocity, 0.3); // Reduced from 0.5\n          \n          // Update target velocity with reduced clamping\n          targetScrollVelocity.current = Math.max(-1.5, Math.min(1.5, smoothedVelocity)); // Reduced from ±4 to ±1.5\n          \n          lastScrollDelta = scrollDelta;\n          lastScrollTime = currentTime;\n        }\n        \n        lastScrollY.current = currentScrollY;\n      };\n\n      // Add scroll listener\n      window.addEventListener('scroll', handleScroll, { passive: true });\n\n      // Handle WebGL context loss\n      const handleContextLost = () => {\n        isDestroyed = true;\n        setHasError(true);\n      };\n\n      const handleContextRestored = () => {\n        isDestroyed = false;\n        setHasError(false);\n      };\n\n      renderer.domElement.addEventListener('webglcontextlost', handleContextLost);\n      renderer.domElement.addEventListener('webglcontextrestored', handleContextRestored);\n\n      return () => {\n        cleanup();\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('resize', handleResize);\n        window.removeEventListener('scroll', handleScroll);\n        renderer.domElement.removeEventListener('webglcontextlost', handleContextLost);\n        renderer.domElement.removeEventListener('webglcontextrestored', handleContextRestored);\n        renderer.dispose();\n        geometry.dispose();\n        material.dispose();\n        texture.dispose();\n      };\n    } catch (e) {\n      console.error('Setup error:', e);\n      setHasError(true);\n      cleanup();\n    }\n  }, [text, size, fill, isHeader, hasError, fontLoaded, isBrowser, renderError]);\n\n  if (!isBrowser || !fontLoaded || hasError || renderError) {\n    return (\n      <FallbackText \n        $isHeader={isHeader} \n        className={className}\n        color={fill}\n      >\n        {text}\n      </FallbackText>\n    );\n  }\n\n  return (\n    <WebGLErrorBoundary>\n      <TextContainer ref={containerRef} className={className} $isHeader={isHeader} />\n    </WebGLErrorBoundary>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}