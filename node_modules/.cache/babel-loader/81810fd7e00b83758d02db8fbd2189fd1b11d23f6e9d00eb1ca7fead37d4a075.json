{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/BlotterText.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextContainer = styled.div`\n  canvas {\n    width: 100% !important;\n    height: auto !important;\n  }\n`;\n_c = TextContainer;\nconst LoadingText = styled.div`\n  font-size: ${props => props.$size}px;\n  color: ${props => props.$fill};\n  text-align: center;\n  font-family: 'Creepster', cursive;\n`;\n_c2 = LoadingText;\nconst MathUtils = {\n  lineEq: (y2, y1, x2, x1, currentVal) => {\n    const m = (y2 - y1) / (x2 - x1);\n    const b = y1 - m * x1;\n    return m * currentVal + b;\n  },\n  lerp: (a, b, n) => (1 - n) * a + n * b,\n  distance: (x1, x2, y1, y2) => {\n    const a = x1 - x2;\n    const b = y1 - y2;\n    return Math.hypot(a, b);\n  }\n};\nexport const BlotterText = ({\n  text,\n  size = 100,\n  fill = '#fff',\n  className\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const materialRef = useRef(null);\n  const blotterRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const lastMousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  const volatilityRef = useRef(0);\n  const animationFrameRef = useRef();\n  const handleMouseMove = e => {\n    if (materialRef.current) {\n      const mousePos = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      const distanceFromCenter = Math.sqrt(Math.pow(mousePos.x - window.innerWidth / 2, 2) + Math.pow(mousePos.y - window.innerHeight / 2, 2));\n      const maxDistance = Math.sqrt(Math.pow(window.innerWidth / 2, 2) + Math.pow(window.innerHeight / 2, 2));\n      const mouseInfluence = distanceFromCenter / maxDistance;\n      materialRef.current.uniforms.uVolatility.value = mouseInfluence * 1.2 + 0.15;\n      lastMousePosition.current = mousePos;\n    }\n  };\n  useEffect(() => {\n    let checkAttempts = 0;\n    const maxAttempts = 50; // 5 seconds maximum wait time\n\n    const checkBlotter = () => {\n      checkAttempts++;\n      if (window.blotterReady && window.Blotter && window.Blotter.LiquidDistortMaterial) {\n        console.log('Blotter initialized successfully');\n        setIsLoading(false);\n        initBlotter();\n      } else if (checkAttempts < maxAttempts) {\n        setTimeout(checkBlotter, 100);\n      } else {\n        console.error('Failed to load Blotter after 5 seconds');\n        setIsLoading(true);\n      }\n    };\n\n    // Start checking after a short delay to allow for initial script loading\n    setTimeout(checkBlotter, 500);\n    return () => {\n      checkAttempts = maxAttempts; // Stop any pending checks on unmount\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (blotterRef.current) {\n        blotterRef.current.destroy();\n      }\n    };\n  }, [text, size, fill]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingText, {\n      $size: size,\n      $fill: fill,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(TextContainer, {\n    ref: containerRef,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 10\n  }, this);\n};\n_s(BlotterText, \"EQ5YUoeJqUmmuV8J92Cd8tXprkc=\");\n_c3 = BlotterText;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TextContainer\");\n$RefreshReg$(_c2, \"LoadingText\");\n$RefreshReg$(_c3, \"BlotterText\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","jsxDEV","_jsxDEV","TextContainer","div","_c","LoadingText","props","$size","$fill","_c2","MathUtils","lineEq","y2","y1","x2","x1","currentVal","m","b","lerp","a","n","distance","Math","hypot","BlotterText","text","size","fill","className","_s","containerRef","materialRef","blotterRef","isLoading","setIsLoading","lastMousePosition","x","y","volatilityRef","animationFrameRef","handleMouseMove","e","current","mousePos","clientX","clientY","distanceFromCenter","sqrt","pow","window","innerWidth","innerHeight","maxDistance","mouseInfluence","uniforms","uVolatility","value","checkAttempts","maxAttempts","checkBlotter","blotterReady","Blotter","LiquidDistortMaterial","console","log","initBlotter","setTimeout","error","cancelAnimationFrame","removeEventListener","destroy","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c3","$RefreshReg$"],"sources":["/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/BlotterText.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\ndeclare global {\n  interface Window {\n    Blotter: any;\n    blotterReady: boolean;\n  }\n}\n\ninterface LoadingTextProps {\n  $size: number;\n  $fill: string;\n}\n\nconst TextContainer = styled.div`\n  canvas {\n    width: 100% !important;\n    height: auto !important;\n  }\n`;\n\nconst LoadingText = styled.div<LoadingTextProps>`\n  font-size: ${props => props.$size}px;\n  color: ${props => props.$fill};\n  text-align: center;\n  font-family: 'Creepster', cursive;\n`;\n\ninterface BlotterTextProps {\n  text: string;\n  size?: number;\n  fill?: string;\n  className?: string;\n}\n\nconst MathUtils = {\n  lineEq: (y2: number, y1: number, x2: number, x1: number, currentVal: number) => {\n    const m = (y2 - y1) / (x2 - x1);\n    const b = y1 - m * x1;\n    return m * currentVal + b;\n  },\n  lerp: (a: number, b: number, n: number) => (1 - n) * a + n * b,\n  distance: (x1: number, x2: number, y1: number, y2: number) => {\n    const a = x1 - x2;\n    const b = y1 - y2;\n    return Math.hypot(a, b);\n  }\n};\n\nexport const BlotterText: React.FC<BlotterTextProps> = ({ \n  text, \n  size = 100,\n  fill = '#fff',\n  className \n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const materialRef = useRef<any>(null);\n  const blotterRef = useRef<any>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const lastMousePosition = useRef({ x: 0, y: 0 });\n  const volatilityRef = useRef(0);\n  const animationFrameRef = useRef<number>();\n\n  const handleMouseMove = (e: MouseEvent) => {\n    if (materialRef.current) {\n      const mousePos = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      \n      const distanceFromCenter = Math.sqrt(\n        Math.pow(mousePos.x - window.innerWidth / 2, 2) +\n        Math.pow(mousePos.y - window.innerHeight / 2, 2)\n      );\n      \n      const maxDistance = Math.sqrt(\n        Math.pow(window.innerWidth / 2, 2) +\n        Math.pow(window.innerHeight / 2, 2)\n      );\n      \n      const mouseInfluence = distanceFromCenter / maxDistance;\n      materialRef.current.uniforms.uVolatility.value = mouseInfluence * 1.2 + 0.15;\n\n      lastMousePosition.current = mousePos;\n    }\n  };\n\n  useEffect(() => {\n    let checkAttempts = 0;\n    const maxAttempts = 50; // 5 seconds maximum wait time\n\n    const checkBlotter = () => {\n      checkAttempts++;\n      if (window.blotterReady && window.Blotter && window.Blotter.LiquidDistortMaterial) {\n        console.log('Blotter initialized successfully');\n        setIsLoading(false);\n        initBlotter();\n      } else if (checkAttempts < maxAttempts) {\n        setTimeout(checkBlotter, 100);\n      } else {\n        console.error('Failed to load Blotter after 5 seconds');\n        setIsLoading(true);\n      }\n    };\n\n    // Start checking after a short delay to allow for initial script loading\n    setTimeout(checkBlotter, 500);\n\n    return () => {\n      checkAttempts = maxAttempts; // Stop any pending checks on unmount\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (blotterRef.current) {\n        blotterRef.current.destroy();\n      }\n    };\n  }, [text, size, fill]);\n\n  if (isLoading) {\n    return <LoadingText $size={size} $fill={fill}>{text}</LoadingText>;\n  }\n\n  return <TextContainer ref={containerRef} className={className} />;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}