{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/Hero.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { BlotterText } from './BlotterText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroContainer = styled.section`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n`;\n_c = HeroContainer;\nconst BlotterContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  padding: 0 2rem;\n`;\n_c2 = BlotterContainer;\nconst useViewportSize = () => {\n  _s();\n  const [size, setSize] = useState({\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    const updateSize = () => {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n};\n_s(useViewportSize, \"jq6poA/RipA6/BZIsTHdXaoi/oo=\");\nexport const Hero = () => {\n  _s2();\n  const {\n    width,\n    height\n  } = useViewportSize();\n\n  // Calculate font size based on viewport dimensions\n  // We'll use viewport width as the primary factor, but also consider height\n  // The multiplier (0.4) can be adjusted to fine-tune the size\n  const fontSize = Math.min(width * 0.4, height * 0.8);\n  return /*#__PURE__*/_jsxDEV(HeroContainer, {\n    children: /*#__PURE__*/_jsxDEV(BlotterContainer, {\n      children: /*#__PURE__*/_jsxDEV(BlotterText, {\n        text: \"SQUANCH\",\n        size: fontSize,\n        fill: \"#ffffff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s2(Hero, \"bT4Q4pAJZ6kAroyPU6qFEN9ac24=\", false, function () {\n  return [useViewportSize];\n});\n_c3 = Hero;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"HeroContainer\");\n$RefreshReg$(_c2, \"BlotterContainer\");\n$RefreshReg$(_c3, \"Hero\");","map":{"version":3,"names":["React","useEffect","useState","styled","BlotterText","jsxDEV","_jsxDEV","HeroContainer","section","_c","BlotterContainer","div","_c2","useViewportSize","_s","size","setSize","width","height","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Hero","_s2","fontSize","Math","min","children","text","fill","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/Hero.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { BlotterText } from './BlotterText';\n\nconst HeroContainer = styled.section`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst BlotterContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  padding: 0 2rem;\n`;\n\nconst useViewportSize = () => {\n  const [size, setSize] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    const updateSize = () => {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n\n    window.addEventListener('resize', updateSize);\n    updateSize();\n\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  return size;\n};\n\nexport const Hero: React.FC = () => {\n  const { width, height } = useViewportSize();\n  \n  // Calculate font size based on viewport dimensions\n  // We'll use viewport width as the primary factor, but also consider height\n  // The multiplier (0.4) can be adjusted to fine-tune the size\n  const fontSize = Math.min(width * 0.4, height * 0.8);\n\n  return (\n    <HeroContainer>\n      <BlotterContainer>\n        <BlotterText \n          text=\"SQUANCH\" \n          size={fontSize}\n          fill=\"#ffffff\"\n        />\n      </BlotterContainer>\n    </HeroContainer>\n  );\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGJ,MAAM,CAACK,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,aAAa;AAUnB,MAAMG,gBAAgB,GAAGP,MAAM,CAACQ,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,gBAAgB;AAStB,MAAMG,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC;IAAEe,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC;EAEzDjB,SAAS,CAAC,MAAM;IACd,MAAMkB,UAAU,GAAGA,CAAA,KAAM;MACvBH,OAAO,CAAC;QACNC,KAAK,EAAEG,MAAM,CAACC,UAAU;QACxBH,MAAM,EAAEE,MAAM,CAACE;MACjB,CAAC,CAAC;IACJ,CAAC;IAEDF,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAEJ,UAAU,CAAC;IAC7CA,UAAU,CAAC,CAAC;IAEZ,OAAO,MAAMC,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEL,UAAU,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOJ,IAAI;AACb,CAAC;AAACD,EAAA,CAlBID,eAAe;AAoBrB,OAAO,MAAMY,IAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClC,MAAM;IAAET,KAAK;IAAEC;EAAO,CAAC,GAAGL,eAAe,CAAC,CAAC;;EAE3C;EACA;EACA;EACA,MAAMc,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACZ,KAAK,GAAG,GAAG,EAAEC,MAAM,GAAG,GAAG,CAAC;EAEpD,oBACEZ,OAAA,CAACC,aAAa;IAAAuB,QAAA,eACZxB,OAAA,CAACI,gBAAgB;MAAAoB,QAAA,eACfxB,OAAA,CAACF,WAAW;QACV2B,IAAI,EAAC,SAAS;QACdhB,IAAI,EAAEY,QAAS;QACfK,IAAI,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEpB,CAAC;AAACV,GAAA,CAnBWD,IAAc;EAAA,QACCZ,eAAe;AAAA;AAAAwB,GAAA,GAD9BZ,IAAc;AAAA,IAAAhB,EAAA,EAAAG,GAAA,EAAAyB,GAAA;AAAAC,YAAA,CAAA7B,EAAA;AAAA6B,YAAA,CAAA1B,GAAA;AAAA0B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}