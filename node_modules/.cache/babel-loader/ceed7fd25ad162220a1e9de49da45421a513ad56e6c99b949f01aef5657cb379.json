{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/BlotterText.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextContainer = styled.div`\n  canvas {\n    width: 100% !important;\n    height: auto !important;\n  }\n`;\n_c = TextContainer;\nconst LoadingText = styled.div`\n  font-size: ${props => props.$size}px;\n  color: ${props => props.$fill};\n  text-align: center;\n  font-family: 'Creepster', cursive;\n`;\n_c2 = LoadingText;\nconst MathUtils = {\n  lineEq: (y2, y1, x2, x1, currentVal) => {\n    const m = (y2 - y1) / (x2 - x1);\n    const b = y1 - m * x1;\n    return m * currentVal + b;\n  },\n  lerp: (a, b, n) => (1 - n) * a + n * b,\n  distance: (x1, x2, y1, y2) => {\n    const a = x1 - x2;\n    const b = y1 - y2;\n    return Math.hypot(a, b);\n  }\n};\nexport const BlotterText = ({\n  text,\n  size = 100,\n  fill = '#fff',\n  className\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const materialRef = useRef(null);\n  const blotterRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const lastMousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  const volatilityRef = useRef(0);\n  const animationFrameRef = useRef();\n  const handleMouseMove = e => {\n    if (materialRef.current) {\n      const mousePos = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      const distanceFromCenter = Math.sqrt(Math.pow(mousePos.x - window.innerWidth / 2, 2) + Math.pow(mousePos.y - window.innerHeight / 2, 2));\n      const maxDistance = Math.sqrt(Math.pow(window.innerWidth / 2, 2) + Math.pow(window.innerHeight / 2, 2));\n      const mouseInfluence = distanceFromCenter / maxDistance;\n      materialRef.current.uniforms.uVolatility.value = mouseInfluence * 1.2 + 0.15;\n      lastMousePosition.current = mousePos;\n    }\n  };\n  useEffect(() => {\n    let checkAttempts = 0;\n    const maxAttempts = 50; // 5 seconds maximum wait time\n\n    const initBlotter = () => {\n      try {\n        console.log('Creating material');\n        const material = new window.Blotter.LiquidDistortMaterial();\n        materialRef.current = material;\n\n        // Set initial uniforms\n        material.uniforms.uSpeed.value = 1.0;\n        material.uniforms.uVolatility.value = 0.15;\n        material.uniforms.uSeed.value = 0.1;\n        console.log('Creating Blotter instance');\n        const blotter = new window.Blotter(material, {\n          texts: [new window.Blotter.Text(text, {\n            family: \"Creepster\",\n            size: size,\n            fill: fill,\n            paddingLeft: 100,\n            paddingRight: 100,\n            weight: 400,\n            leading: 1,\n            tracking: 0\n          })]\n        });\n        blotterRef.current = blotter;\n        console.log('Getting scope');\n        const scope = blotter.forText(blotter.texts[0]);\n        if (containerRef.current) {\n          console.log('Appending to container');\n          while (containerRef.current.firstChild) {\n            containerRef.current.removeChild(containerRef.current.firstChild);\n          }\n          containerRef.current.appendChild(scope.domElement);\n        }\n\n        // Animation setup\n        let lastTime = 0;\n        const animate = currentTime => {\n          if (!materialRef.current) return;\n          const deltaTime = currentTime - lastTime;\n          lastTime = currentTime;\n          material.uniforms.uSeed.value = (material.uniforms.uSeed.value + deltaTime * 0.0005) % 1;\n          const time = currentTime * 0.001;\n          const baseVolatility = Math.sin(time) * 0.1 + 0.1;\n          material.uniforms.uVolatility.value = Math.max(material.uniforms.uVolatility.value, baseVolatility);\n          animationFrameRef.current = requestAnimationFrame(animate);\n        };\n        console.log('Starting animation');\n        animationFrameRef.current = requestAnimationFrame(animate);\n\n        // Event listeners\n        window.addEventListener('mousemove', handleMouseMove);\n        window.addEventListener('scroll', () => {\n          if (materialRef.current) {\n            const scrolled = window.pageYOffset;\n            const maxScroll = document.documentElement.scrollHeight - window.innerHeight;\n            const scrollProgress = scrolled / maxScroll;\n            material.uniforms.uVolatility.value = scrollProgress * 0.8 + 0.1;\n          }\n        });\n        console.log('Blotter initialization complete');\n      } catch (error) {\n        console.error('Error initializing Blotter:', error);\n        setIsLoading(true);\n      }\n    };\n    const checkBlotter = () => {\n      checkAttempts++;\n      if (window.blotterReady && window.Blotter && window.Blotter.LiquidDistortMaterial) {\n        console.log('Blotter initialized successfully');\n        setIsLoading(false);\n        initBlotter();\n      } else if (checkAttempts < maxAttempts) {\n        setTimeout(checkBlotter, 100);\n      } else {\n        console.error('Failed to load Blotter after 5 seconds');\n        setIsLoading(true);\n      }\n    };\n\n    // Start checking after a short delay to allow for initial script loading\n    setTimeout(checkBlotter, 500);\n    return () => {\n      checkAttempts = maxAttempts; // Stop any pending checks on unmount\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (blotterRef.current) {\n        blotterRef.current.destroy();\n      }\n    };\n  }, [text, size, fill]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingText, {\n      $size: size,\n      $fill: fill,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(TextContainer, {\n    ref: containerRef,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 10\n  }, this);\n};\n_s(BlotterText, \"EQ5YUoeJqUmmuV8J92Cd8tXprkc=\");\n_c3 = BlotterText;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TextContainer\");\n$RefreshReg$(_c2, \"LoadingText\");\n$RefreshReg$(_c3, \"BlotterText\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","jsxDEV","_jsxDEV","TextContainer","div","_c","LoadingText","props","$size","$fill","_c2","MathUtils","lineEq","y2","y1","x2","x1","currentVal","m","b","lerp","a","n","distance","Math","hypot","BlotterText","text","size","fill","className","_s","containerRef","materialRef","blotterRef","isLoading","setIsLoading","lastMousePosition","x","y","volatilityRef","animationFrameRef","handleMouseMove","e","current","mousePos","clientX","clientY","distanceFromCenter","sqrt","pow","window","innerWidth","innerHeight","maxDistance","mouseInfluence","uniforms","uVolatility","value","checkAttempts","maxAttempts","initBlotter","console","log","material","Blotter","LiquidDistortMaterial","uSpeed","uSeed","blotter","texts","Text","family","paddingLeft","paddingRight","weight","leading","tracking","scope","forText","firstChild","removeChild","appendChild","domElement","lastTime","animate","currentTime","deltaTime","time","baseVolatility","sin","max","requestAnimationFrame","addEventListener","scrolled","pageYOffset","maxScroll","document","documentElement","scrollHeight","scrollProgress","error","checkBlotter","blotterReady","setTimeout","cancelAnimationFrame","removeEventListener","destroy","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c3","$RefreshReg$"],"sources":["/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/BlotterText.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\ndeclare global {\n  interface Window {\n    Blotter: any;\n    blotterReady: boolean;\n  }\n}\n\ninterface LoadingTextProps {\n  $size: number;\n  $fill: string;\n}\n\nconst TextContainer = styled.div`\n  canvas {\n    width: 100% !important;\n    height: auto !important;\n  }\n`;\n\nconst LoadingText = styled.div<LoadingTextProps>`\n  font-size: ${props => props.$size}px;\n  color: ${props => props.$fill};\n  text-align: center;\n  font-family: 'Creepster', cursive;\n`;\n\ninterface BlotterTextProps {\n  text: string;\n  size?: number;\n  fill?: string;\n  className?: string;\n}\n\nconst MathUtils = {\n  lineEq: (y2: number, y1: number, x2: number, x1: number, currentVal: number) => {\n    const m = (y2 - y1) / (x2 - x1);\n    const b = y1 - m * x1;\n    return m * currentVal + b;\n  },\n  lerp: (a: number, b: number, n: number) => (1 - n) * a + n * b,\n  distance: (x1: number, x2: number, y1: number, y2: number) => {\n    const a = x1 - x2;\n    const b = y1 - y2;\n    return Math.hypot(a, b);\n  }\n};\n\nexport const BlotterText: React.FC<BlotterTextProps> = ({ \n  text, \n  size = 100,\n  fill = '#fff',\n  className \n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const materialRef = useRef<any>(null);\n  const blotterRef = useRef<any>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const lastMousePosition = useRef({ x: 0, y: 0 });\n  const volatilityRef = useRef(0);\n  const animationFrameRef = useRef<number>();\n\n  const handleMouseMove = (e: MouseEvent) => {\n    if (materialRef.current) {\n      const mousePos = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      \n      const distanceFromCenter = Math.sqrt(\n        Math.pow(mousePos.x - window.innerWidth / 2, 2) +\n        Math.pow(mousePos.y - window.innerHeight / 2, 2)\n      );\n      \n      const maxDistance = Math.sqrt(\n        Math.pow(window.innerWidth / 2, 2) +\n        Math.pow(window.innerHeight / 2, 2)\n      );\n      \n      const mouseInfluence = distanceFromCenter / maxDistance;\n      materialRef.current.uniforms.uVolatility.value = mouseInfluence * 1.2 + 0.15;\n\n      lastMousePosition.current = mousePos;\n    }\n  };\n\n  useEffect(() => {\n    let checkAttempts = 0;\n    const maxAttempts = 50; // 5 seconds maximum wait time\n\n    const initBlotter = () => {\n      try {\n        console.log('Creating material');\n        const material = new window.Blotter.LiquidDistortMaterial();\n        materialRef.current = material;\n\n        // Set initial uniforms\n        material.uniforms.uSpeed.value = 1.0;\n        material.uniforms.uVolatility.value = 0.15;\n        material.uniforms.uSeed.value = 0.1;\n\n        console.log('Creating Blotter instance');\n        const blotter = new window.Blotter(material, {\n          texts: [\n            new window.Blotter.Text(text, {\n              family: \"Creepster\",\n              size: size,\n              fill: fill,\n              paddingLeft: 100,\n              paddingRight: 100,\n              weight: 400,\n              leading: 1,\n              tracking: 0,\n            }),\n          ],\n        });\n\n        blotterRef.current = blotter;\n\n        console.log('Getting scope');\n        const scope = blotter.forText(blotter.texts[0]);\n        \n        if (containerRef.current) {\n          console.log('Appending to container');\n          while (containerRef.current.firstChild) {\n            containerRef.current.removeChild(containerRef.current.firstChild);\n          }\n          containerRef.current.appendChild(scope.domElement);\n        }\n\n        // Animation setup\n        let lastTime = 0;\n        const animate = (currentTime: number) => {\n          if (!materialRef.current) return;\n\n          const deltaTime = currentTime - lastTime;\n          lastTime = currentTime;\n\n          material.uniforms.uSeed.value = (material.uniforms.uSeed.value + deltaTime * 0.0005) % 1;\n          const time = currentTime * 0.001;\n          const baseVolatility = Math.sin(time) * 0.1 + 0.1;\n          material.uniforms.uVolatility.value = Math.max(material.uniforms.uVolatility.value, baseVolatility);\n\n          animationFrameRef.current = requestAnimationFrame(animate);\n        };\n\n        console.log('Starting animation');\n        animationFrameRef.current = requestAnimationFrame(animate);\n\n        // Event listeners\n        window.addEventListener('mousemove', handleMouseMove);\n        window.addEventListener('scroll', () => {\n          if (materialRef.current) {\n            const scrolled = window.pageYOffset;\n            const maxScroll = document.documentElement.scrollHeight - window.innerHeight;\n            const scrollProgress = scrolled / maxScroll;\n            material.uniforms.uVolatility.value = scrollProgress * 0.8 + 0.1;\n          }\n        });\n\n        console.log('Blotter initialization complete');\n      } catch (error) {\n        console.error('Error initializing Blotter:', error);\n        setIsLoading(true);\n      }\n    };\n\n    const checkBlotter = () => {\n      checkAttempts++;\n      if (window.blotterReady && window.Blotter && window.Blotter.LiquidDistortMaterial) {\n        console.log('Blotter initialized successfully');\n        setIsLoading(false);\n        initBlotter();\n      } else if (checkAttempts < maxAttempts) {\n        setTimeout(checkBlotter, 100);\n      } else {\n        console.error('Failed to load Blotter after 5 seconds');\n        setIsLoading(true);\n      }\n    };\n\n    // Start checking after a short delay to allow for initial script loading\n    setTimeout(checkBlotter, 500);\n\n    return () => {\n      checkAttempts = maxAttempts; // Stop any pending checks on unmount\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (blotterRef.current) {\n        blotterRef.current.destroy();\n      }\n    };\n  }, [text, size, fill]);\n\n  if (isLoading) {\n    return <LoadingText $size={size} $fill={fill}>{text}</LoadingText>;\n  }\n\n  return <TextContainer ref={containerRef} className={className} />;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}