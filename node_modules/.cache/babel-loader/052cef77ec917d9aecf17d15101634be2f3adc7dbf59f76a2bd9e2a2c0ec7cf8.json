{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/Demo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { BlotterText } from './BlotterText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DemoSection = styled.section`\n  min-height: 100vh;\n  width: 100%;\n  padding: 4rem 2rem;\n  background: var(--background);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = DemoSection;\nconst SectionTitle = styled.div`\n  text-align: center;\n  margin-bottom: 4rem;\n`;\n_c2 = SectionTitle;\nconst DemoContainer = styled.div`\n  max-width: 1200px;\n  width: 100%;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 4rem;\n\n  @media (max-width: 968px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c3 = DemoContainer;\nconst ChatInterface = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  padding: 2rem;\n  height: 600px;\n  display: flex;\n  flex-direction: column;\n`;\n_c4 = ChatInterface;\nconst ChatMessages = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  margin-bottom: 1rem;\n  padding: 1rem;\n`;\n_c5 = ChatMessages;\nconst Message = styled.div`\n  margin-bottom: 1rem;\n  padding: 1rem;\n  border-radius: 8px;\n  max-width: 80%;\n  ${props => props.isBot ? `\n    background: rgba(0, 255, 157, 0.1);\n    margin-right: auto;\n  ` : `\n    background: rgba(255, 255, 255, 0.1);\n    margin-left: auto;\n  `}\n`;\n_c6 = Message;\nconst ChatInput = styled.div`\n  display: flex;\n  gap: 1rem;\n`;\n_c7 = ChatInput;\nconst Input = styled.input`\n  flex: 1;\n  padding: 1rem;\n  border: none;\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.1);\n  color: var(--text);\n  font-size: 1rem;\n\n  &:focus {\n    outline: 2px solid var(--accent);\n  }\n`;\n_c8 = Input;\nconst SendButton = styled.button`\n  padding: 1rem 2rem;\n  border: none;\n  border-radius: 8px;\n  background: var(--accent);\n  color: var(--background);\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    opacity: 0.9;\n  }\n`;\n_c9 = SendButton;\nconst RandomizerContainer = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  padding: 2rem;\n  height: 600px;\n  display: flex;\n  flex-direction: column;\n`;\n_c10 = RandomizerContainer;\nconst RandomizerTitle = styled.div`\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n_c11 = RandomizerTitle;\nconst RandomizerContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n_c12 = RandomizerContent;\nconst RandomizerResult = styled.div`\n  font-size: 1.5rem;\n  margin: 2rem 0;\n  padding: 2rem;\n  border-radius: 12px;\n  background: rgba(0, 255, 157, 0.1);\n  color: var(--text);\n  width: 100%;\n  min-height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c13 = RandomizerResult;\nconst GenerateButton = styled(SendButton)`\n  width: 200px;\n`;\n_c14 = GenerateButton;\nexport const Demo = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hey there! I'm Squanchy AI. What's squanchin' with you?\",\n    isBot: true\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const [prediction, setPrediction] = useState('Click to generate your quantum prediction!');\n  const handleSendMessage = () => {\n    if (!inputValue.trim()) return;\n    setMessages([...messages, {\n      text: inputValue,\n      isBot: false\n    }]);\n    setInputValue('');\n\n    // Simulate AI response\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        text: \"Squanchy response! That's pretty squanched up, if you ask me!\",\n        isBot: true\n      }]);\n    }, 1000);\n  };\n  const generatePrediction = () => {\n    const predictions = [\"The quantum cats predict great wealth in your future... in an alternate dimension!\", \"Your next meme will go viral across the Squanchiverse!\", \"A mysterious Squanch will enter your life... bringing chaos and opportunity!\", \"The stars align for a perfect squanching season ahead!\"];\n    setPrediction(predictions[Math.floor(Math.random() * predictions.length)]);\n  };\n  return /*#__PURE__*/_jsxDEV(DemoSection, {\n    id: \"demo\",\n    children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n      children: /*#__PURE__*/_jsxDEV(BlotterText, {\n        text: \"Experience the Squanch!\",\n        fill: \"rgba(255, 255, 255, 0.9)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DemoContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ChatInterface, {\n        children: [/*#__PURE__*/_jsxDEV(ChatMessages, {\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n            isBot: msg.isBot,\n            children: msg.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Ask Squanchy something...\",\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RandomizerContainer, {\n        children: [/*#__PURE__*/_jsxDEV(RandomizerTitle, {\n          children: /*#__PURE__*/_jsxDEV(BlotterText, {\n            text: \"Quantum Randomizer\",\n            fill: \"rgba(255, 255, 255, 0.9)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RandomizerContent, {\n          children: [/*#__PURE__*/_jsxDEV(RandomizerResult, {\n            children: prediction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GenerateButton, {\n            onClick: generatePrediction,\n            children: \"Generate Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(Demo, \"DaBC8RCxm/c72TiMAatwZDHxiTw=\");\n_c15 = Demo;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"DemoSection\");\n$RefreshReg$(_c2, \"SectionTitle\");\n$RefreshReg$(_c3, \"DemoContainer\");\n$RefreshReg$(_c4, \"ChatInterface\");\n$RefreshReg$(_c5, \"ChatMessages\");\n$RefreshReg$(_c6, \"Message\");\n$RefreshReg$(_c7, \"ChatInput\");\n$RefreshReg$(_c8, \"Input\");\n$RefreshReg$(_c9, \"SendButton\");\n$RefreshReg$(_c10, \"RandomizerContainer\");\n$RefreshReg$(_c11, \"RandomizerTitle\");\n$RefreshReg$(_c12, \"RandomizerContent\");\n$RefreshReg$(_c13, \"RandomizerResult\");\n$RefreshReg$(_c14, \"GenerateButton\");\n$RefreshReg$(_c15, \"Demo\");","map":{"version":3,"names":["React","useState","styled","BlotterText","jsxDEV","_jsxDEV","DemoSection","section","_c","SectionTitle","div","_c2","DemoContainer","_c3","ChatInterface","_c4","ChatMessages","_c5","Message","props","isBot","_c6","ChatInput","_c7","Input","input","_c8","SendButton","button","_c9","RandomizerContainer","_c10","RandomizerTitle","_c11","RandomizerContent","_c12","RandomizerResult","_c13","GenerateButton","_c14","Demo","_s","messages","setMessages","text","inputValue","setInputValue","prediction","setPrediction","handleSendMessage","trim","setTimeout","prev","generatePrediction","predictions","Math","floor","random","length","id","children","fill","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","e","target","onKeyPress","key","onClick","_c15","$RefreshReg$"],"sources":["/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/Demo.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { BlotterText } from './BlotterText';\n\nconst DemoSection = styled.section`\n  min-height: 100vh;\n  width: 100%;\n  padding: 4rem 2rem;\n  background: var(--background);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst SectionTitle = styled.div`\n  text-align: center;\n  margin-bottom: 4rem;\n`;\n\nconst DemoContainer = styled.div`\n  max-width: 1200px;\n  width: 100%;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 4rem;\n\n  @media (max-width: 968px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst ChatInterface = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  padding: 2rem;\n  height: 600px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChatMessages = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  margin-bottom: 1rem;\n  padding: 1rem;\n`;\n\nconst Message = styled.div<{ isBot?: boolean }>`\n  margin-bottom: 1rem;\n  padding: 1rem;\n  border-radius: 8px;\n  max-width: 80%;\n  ${props => props.isBot ? `\n    background: rgba(0, 255, 157, 0.1);\n    margin-right: auto;\n  ` : `\n    background: rgba(255, 255, 255, 0.1);\n    margin-left: auto;\n  `}\n`;\n\nconst ChatInput = styled.div`\n  display: flex;\n  gap: 1rem;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  padding: 1rem;\n  border: none;\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.1);\n  color: var(--text);\n  font-size: 1rem;\n\n  &:focus {\n    outline: 2px solid var(--accent);\n  }\n`;\n\nconst SendButton = styled.button`\n  padding: 1rem 2rem;\n  border: none;\n  border-radius: 8px;\n  background: var(--accent);\n  color: var(--background);\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    opacity: 0.9;\n  }\n`;\n\nconst RandomizerContainer = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  padding: 2rem;\n  height: 600px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst RandomizerTitle = styled.div`\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n\nconst RandomizerContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst RandomizerResult = styled.div`\n  font-size: 1.5rem;\n  margin: 2rem 0;\n  padding: 2rem;\n  border-radius: 12px;\n  background: rgba(0, 255, 157, 0.1);\n  color: var(--text);\n  width: 100%;\n  min-height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst GenerateButton = styled(SendButton)`\n  width: 200px;\n`;\n\nexport const Demo: React.FC = () => {\n  const [messages, setMessages] = useState([\n    { text: \"Hey there! I'm Squanchy AI. What's squanchin' with you?\", isBot: true }\n  ]);\n  const [inputValue, setInputValue] = useState('');\n  const [prediction, setPrediction] = useState('Click to generate your quantum prediction!');\n\n  const handleSendMessage = () => {\n    if (!inputValue.trim()) return;\n    \n    setMessages([...messages, { text: inputValue, isBot: false }]);\n    setInputValue('');\n    \n    // Simulate AI response\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        text: \"Squanchy response! That's pretty squanched up, if you ask me!\",\n        isBot: true\n      }]);\n    }, 1000);\n  };\n\n  const generatePrediction = () => {\n    const predictions = [\n      \"The quantum cats predict great wealth in your future... in an alternate dimension!\",\n      \"Your next meme will go viral across the Squanchiverse!\",\n      \"A mysterious Squanch will enter your life... bringing chaos and opportunity!\",\n      \"The stars align for a perfect squanching season ahead!\"\n    ];\n    setPrediction(predictions[Math.floor(Math.random() * predictions.length)]);\n  };\n\n  return (\n    <DemoSection id=\"demo\">\n      <SectionTitle>\n        <BlotterText \n          text=\"Experience the Squanch!\"\n          fill=\"rgba(255, 255, 255, 0.9)\"\n        />\n      </SectionTitle>\n\n      <DemoContainer>\n        <ChatInterface>\n          <ChatMessages>\n            {messages.map((msg, index) => (\n              <Message key={index} isBot={msg.isBot}>\n                {msg.text}\n              </Message>\n            ))}\n          </ChatMessages>\n          <ChatInput>\n            <Input\n              type=\"text\"\n              placeholder=\"Ask Squanchy something...\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n            />\n            <SendButton onClick={handleSendMessage}>Send</SendButton>\n          </ChatInput>\n        </ChatInterface>\n\n        <RandomizerContainer>\n          <RandomizerTitle>\n            <BlotterText \n              text=\"Quantum Randomizer\"\n              fill=\"rgba(255, 255, 255, 0.9)\"\n            />\n          </RandomizerTitle>\n          <RandomizerContent>\n            <RandomizerResult>\n              {prediction}\n            </RandomizerResult>\n            <GenerateButton onClick={generatePrediction}>\n              Generate Prediction\n            </GenerateButton>\n          </RandomizerContent>\n        </RandomizerContainer>\n      </DemoContainer>\n    </DemoSection>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}