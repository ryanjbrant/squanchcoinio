{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/PortalBackground.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: -1;\n`;\n_c = BackgroundContainer;\nconst vertexShader = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = vec4(position, 1.0);\n  }\n`;\nconst fragmentShader = `\n  uniform float time;\n  uniform vec2 resolution;\n  uniform vec2 mouse;\n  uniform float mousePressed;\n  varying vec2 vUv;\n\n  const float FLUID_SPEED = 0.1;\n  const float VORTEX_SCALE = 0.5;\n  const int ITERATIONS = 32;\n\n  // Noise functions\n  vec2 hash2(vec2 p) {\n    p = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n    return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n  }\n\n  float noise(vec2 p) {\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    vec2 u = f*f*(3.0-2.0*f);\n    return mix(mix(dot(hash2(i + vec2(0.0,0.0)), f - vec2(0.0,0.0)), \n                   dot(hash2(i + vec2(1.0,0.0)), f - vec2(1.0,0.0)), u.x),\n               mix(dot(hash2(i + vec2(0.0,1.0)), f - vec2(0.0,1.0)), \n                   dot(hash2(i + vec2(1.0,1.0)), f - vec2(1.0,1.0)), u.x), u.y);\n  }\n\n  // Fluid simulation\n  vec2 getFluidVelocity(vec2 pos) {\n    vec2 mouseVel = mouse - pos;\n    float dist = length(mouseVel);\n    float strength = mousePressed * exp(-dist * 2.0);\n    \n    // Base vortex flow\n    vec2 perpendicular = vec2(-mouseVel.y, mouseVel.x) / (dist + 0.001);\n    vec2 vortexVel = perpendicular * strength * VORTEX_SCALE;\n    \n    // Add noise-based turbulence\n    float noiseTime = time * FLUID_SPEED;\n    vec2 noisePos = pos * 3.0 + noiseTime;\n    vec2 turbulence = vec2(noise(noisePos), noise(noisePos + 5.0));\n    \n    return vortexVel + turbulence * 0.3;\n  }\n\n  vec4 getFluidColor(vec2 pos) {\n    vec2 vel = getFluidVelocity(pos);\n    float speed = length(vel);\n    \n    // Base portal color (purple)\n    vec3 baseColor = vec3(0.3, 0.0, 0.5);\n    \n    // Red color near mouse with vortex shedding\n    float mouseDist = length(mouse - pos);\n    float vortexStrength = exp(-mouseDist * 3.0) * mousePressed;\n    vec3 vortexColor = vec3(0.8, 0.1, 0.1);\n    \n    // Mix colors based on velocity and distance\n    vec3 finalColor = mix(baseColor, vortexColor, vortexStrength);\n    finalColor += speed * 0.5; // Add brightness based on fluid speed\n    \n    // Add stars\n    float starSize = 0.001;\n    float starBrightness = 0.0;\n    for(int i = 0; i < ITERATIONS; i++) {\n      vec2 starPos = pos + vel * (float(i) / float(ITERATIONS));\n      float star = smoothstep(starSize, 0.0, length(fract(starPos * 50.0) - 0.5));\n      starBrightness += star * (1.0 - float(i) / float(ITERATIONS));\n    }\n    \n    finalColor += vec3(starBrightness);\n    return vec4(finalColor, 1.0);\n  }\n\n  void main() {\n    vec2 uv = (vUv - 0.5) * 2.0;\n    uv.x *= resolution.x / resolution.y;\n    \n    vec4 color = getFluidColor(uv);\n    gl_FragColor = color;\n  }\n`;\nconst PortalBackground = () => {\n  _s();\n  const containerRef = useRef(null);\n  const rendererRef = useRef(null);\n  const timeRef = useRef(0);\n  const frameRef = useRef(0);\n  const mouseRef = useRef(new THREE.Vector2(0, 0));\n  const mousePressedRef = useRef(false);\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    // Setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      powerPreference: 'high-performance',\n      stencil: false,\n      depth: false\n    });\n    rendererRef.current = renderer;\n    const geometry = new THREE.PlaneGeometry(2, 2);\n    const material = new THREE.ShaderMaterial({\n      vertexShader,\n      fragmentShader,\n      uniforms: {\n        time: {\n          value: 0\n        },\n        resolution: {\n          value: new THREE.Vector2()\n        },\n        mouse: {\n          value: new THREE.Vector2()\n        },\n        mousePressed: {\n          value: 0\n        }\n      }\n    });\n    const mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n\n    // Resize handler\n    const handleResize = () => {\n      const {\n        width,\n        height\n      } = containerRef.current.getBoundingClientRect();\n      renderer.setSize(width, height);\n      material.uniforms.resolution.value.set(width, height);\n    };\n\n    // Mouse handlers\n    const handleMouseMove = event => {\n      const {\n        width,\n        height\n      } = containerRef.current.getBoundingClientRect();\n      mouseRef.current.set(event.clientX / width * 2 - 1, -(event.clientY / height) * 2 + 1);\n    };\n    const handleMouseDown = () => {\n      mousePressedRef.current = true;\n    };\n    const handleMouseUp = () => {\n      mousePressedRef.current = false;\n    };\n\n    // Animation\n    const animate = () => {\n      const deltaTime = Math.min(0.016, (performance.now() - timeRef.current) / 1000);\n      timeRef.current = performance.now();\n      material.uniforms.time.value += deltaTime;\n      material.uniforms.mouse.value.copy(mouseRef.current);\n      material.uniforms.mousePressed.value = mousePressedRef.current ? 1 : 0;\n      renderer.render(scene, camera);\n      frameRef.current = requestAnimationFrame(animate);\n    };\n\n    // Initial setup\n    containerRef.current.appendChild(renderer.domElement);\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mousedown', handleMouseDown);\n    window.addEventListener('mouseup', handleMouseUp);\n    animate();\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mousedown', handleMouseDown);\n      window.removeEventListener('mouseup', handleMouseUp);\n      cancelAnimationFrame(frameRef.current);\n      renderer.dispose();\n      geometry.dispose();\n      material.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BackgroundContainer, {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 10\n  }, this);\n};\n_s(PortalBackground, \"tPCeAUqxAZ7wpo2IFI6yLYSsIZg=\");\n_c2 = PortalBackground;\nexport default PortalBackground;\nvar _c, _c2;\n$RefreshReg$(_c, \"BackgroundContainer\");\n$RefreshReg$(_c2, \"PortalBackground\");","map":{"version":3,"names":["React","useEffect","useRef","styled","THREE","jsxDEV","_jsxDEV","BackgroundContainer","div","_c","vertexShader","fragmentShader","PortalBackground","_s","containerRef","rendererRef","timeRef","frameRef","mouseRef","Vector2","mousePressedRef","current","scene","Scene","camera","OrthographicCamera","renderer","WebGLRenderer","antialias","powerPreference","stencil","depth","geometry","PlaneGeometry","material","ShaderMaterial","uniforms","time","value","resolution","mouse","mousePressed","mesh","Mesh","add","handleResize","width","height","getBoundingClientRect","setSize","set","handleMouseMove","event","clientX","clientY","handleMouseDown","handleMouseUp","animate","deltaTime","Math","min","performance","now","copy","render","requestAnimationFrame","appendChild","domElement","window","addEventListener","removeEventListener","cancelAnimationFrame","dispose","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/PortalBackground.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport * as THREE from 'three';\n\nconst BackgroundContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: -1;\n`;\n\nconst vertexShader = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = vec4(position, 1.0);\n  }\n`;\n\nconst fragmentShader = `\n  uniform float time;\n  uniform vec2 resolution;\n  uniform vec2 mouse;\n  uniform float mousePressed;\n  varying vec2 vUv;\n\n  const float FLUID_SPEED = 0.1;\n  const float VORTEX_SCALE = 0.5;\n  const int ITERATIONS = 32;\n\n  // Noise functions\n  vec2 hash2(vec2 p) {\n    p = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n    return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n  }\n\n  float noise(vec2 p) {\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    vec2 u = f*f*(3.0-2.0*f);\n    return mix(mix(dot(hash2(i + vec2(0.0,0.0)), f - vec2(0.0,0.0)), \n                   dot(hash2(i + vec2(1.0,0.0)), f - vec2(1.0,0.0)), u.x),\n               mix(dot(hash2(i + vec2(0.0,1.0)), f - vec2(0.0,1.0)), \n                   dot(hash2(i + vec2(1.0,1.0)), f - vec2(1.0,1.0)), u.x), u.y);\n  }\n\n  // Fluid simulation\n  vec2 getFluidVelocity(vec2 pos) {\n    vec2 mouseVel = mouse - pos;\n    float dist = length(mouseVel);\n    float strength = mousePressed * exp(-dist * 2.0);\n    \n    // Base vortex flow\n    vec2 perpendicular = vec2(-mouseVel.y, mouseVel.x) / (dist + 0.001);\n    vec2 vortexVel = perpendicular * strength * VORTEX_SCALE;\n    \n    // Add noise-based turbulence\n    float noiseTime = time * FLUID_SPEED;\n    vec2 noisePos = pos * 3.0 + noiseTime;\n    vec2 turbulence = vec2(noise(noisePos), noise(noisePos + 5.0));\n    \n    return vortexVel + turbulence * 0.3;\n  }\n\n  vec4 getFluidColor(vec2 pos) {\n    vec2 vel = getFluidVelocity(pos);\n    float speed = length(vel);\n    \n    // Base portal color (purple)\n    vec3 baseColor = vec3(0.3, 0.0, 0.5);\n    \n    // Red color near mouse with vortex shedding\n    float mouseDist = length(mouse - pos);\n    float vortexStrength = exp(-mouseDist * 3.0) * mousePressed;\n    vec3 vortexColor = vec3(0.8, 0.1, 0.1);\n    \n    // Mix colors based on velocity and distance\n    vec3 finalColor = mix(baseColor, vortexColor, vortexStrength);\n    finalColor += speed * 0.5; // Add brightness based on fluid speed\n    \n    // Add stars\n    float starSize = 0.001;\n    float starBrightness = 0.0;\n    for(int i = 0; i < ITERATIONS; i++) {\n      vec2 starPos = pos + vel * (float(i) / float(ITERATIONS));\n      float star = smoothstep(starSize, 0.0, length(fract(starPos * 50.0) - 0.5));\n      starBrightness += star * (1.0 - float(i) / float(ITERATIONS));\n    }\n    \n    finalColor += vec3(starBrightness);\n    return vec4(finalColor, 1.0);\n  }\n\n  void main() {\n    vec2 uv = (vUv - 0.5) * 2.0;\n    uv.x *= resolution.x / resolution.y;\n    \n    vec4 color = getFluidColor(uv);\n    gl_FragColor = color;\n  }\n`;\n\nconst PortalBackground: React.FC = () => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const rendererRef = useRef<THREE.WebGLRenderer | null>(null);\n  const timeRef = useRef<number>(0);\n  const frameRef = useRef<number>(0);\n  const mouseRef = useRef<THREE.Vector2>(new THREE.Vector2(0, 0));\n  const mousePressedRef = useRef<boolean>(false);\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    // Setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n    \n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      powerPreference: 'high-performance',\n      stencil: false,\n      depth: false\n    });\n    rendererRef.current = renderer;\n\n    const geometry = new THREE.PlaneGeometry(2, 2);\n    const material = new THREE.ShaderMaterial({\n      vertexShader,\n      fragmentShader,\n      uniforms: {\n        time: { value: 0 },\n        resolution: { value: new THREE.Vector2() },\n        mouse: { value: new THREE.Vector2() },\n        mousePressed: { value: 0 }\n      }\n    });\n\n    const mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n\n    // Resize handler\n    const handleResize = () => {\n      const { width, height } = containerRef.current!.getBoundingClientRect();\n      renderer.setSize(width, height);\n      material.uniforms.resolution.value.set(width, height);\n    };\n\n    // Mouse handlers\n    const handleMouseMove = (event: MouseEvent) => {\n      const { width, height } = containerRef.current!.getBoundingClientRect();\n      mouseRef.current.set(\n        (event.clientX / width) * 2 - 1,\n        -(event.clientY / height) * 2 + 1\n      );\n    };\n\n    const handleMouseDown = () => {\n      mousePressedRef.current = true;\n    };\n\n    const handleMouseUp = () => {\n      mousePressedRef.current = false;\n    };\n\n    // Animation\n    const animate = () => {\n      const deltaTime = Math.min(0.016, (performance.now() - timeRef.current) / 1000);\n      timeRef.current = performance.now();\n\n      material.uniforms.time.value += deltaTime;\n      material.uniforms.mouse.value.copy(mouseRef.current);\n      material.uniforms.mousePressed.value = mousePressedRef.current ? 1 : 0;\n\n      renderer.render(scene, camera);\n      frameRef.current = requestAnimationFrame(animate);\n    };\n\n    // Initial setup\n    containerRef.current.appendChild(renderer.domElement);\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mousedown', handleMouseDown);\n    window.addEventListener('mouseup', handleMouseUp);\n\n    animate();\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mousedown', handleMouseDown);\n      window.removeEventListener('mouseup', handleMouseUp);\n      \n      cancelAnimationFrame(frameRef.current);\n      renderer.dispose();\n      geometry.dispose();\n      material.dispose();\n    };\n  }, []);\n\n  return <BackgroundContainer ref={containerRef} />;\n};\n\nexport default PortalBackground; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}