{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/BlotterText.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextContainer = styled.div`\n  width: 100%;\n  height: ${props => props.$isHeader ? '100vh' : 'auto'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  canvas {\n    width: 100% !important;\n    height: ${props => props.$isHeader ? '100vh' : 'auto'} !important;\n    object-fit: contain;\n  }\n`;\n_c = TextContainer;\nconst vertexShader = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n`;\nconst fragmentShader = `\n  uniform float time;\n  uniform float distortionFactor;\n  uniform vec2 mousePos;\n  uniform vec3 color;\n  uniform sampler2D textTexture;\n  varying vec2 vUv;\n\n  void main() {\n    vec2 uv = vUv;\n    \n    // Calculate distance from mouse with larger radius of influence\n    float dist = distance(mousePos, uv);\n    float influence = smoothstep(0.8, 0.0, dist) * distortionFactor;\n    \n    // Create wave effect with increased amplitude\n    float wave = sin(uv.x * 8.0 + time) * 0.08 * influence;\n    uv.y += wave;\n    \n    // Create liquid-like distortion with smoother movement\n    float distortion = sin(uv.x * 4.0 + time * 1.5) * cos(uv.y * 4.0 + time) * influence;\n    uv += distortion * 0.08;\n\n    // Sample the text texture\n    vec4 texColor = texture2D(textTexture, uv);\n    \n    // Mix the text color with our desired color\n    gl_FragColor = vec4(color * texColor.r, texColor.a);\n  }\n`;\nexport const BlotterText = ({\n  text,\n  size = 100,\n  fill = '#fff',\n  className,\n  isHeader = false\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const rendererRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const materialRef = useRef(null);\n  const mousePos = useRef({\n    x: 0.5,\n    y: 0.5\n  });\n  const frameRef = useRef();\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    // Setup Three.js scene\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Setup camera\n    const camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0.1, 10);\n    camera.position.z = 1;\n    cameraRef.current = camera;\n\n    // Setup renderer\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(containerRef.current.clientWidth, containerRef.current.clientHeight);\n    rendererRef.current = renderer;\n\n    // Clear container\n    while (containerRef.current.firstChild) {\n      containerRef.current.removeChild(containerRef.current.firstChild);\n    }\n    containerRef.current.appendChild(renderer.domElement);\n\n    // Create text texture\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size based on container size to maintain aspect ratio\n    const containerAspect = containerRef.current.clientWidth / containerRef.current.clientHeight;\n    canvas.width = 2048; // Higher resolution for better text quality\n    canvas.height = canvas.width / containerAspect;\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Calculate font size based on whether it's a header or not\n    const fontSize = isHeader ? Math.floor(canvas.height * 0.25) // Smaller relative size for headers\n    : Math.floor(canvas.height * 0.8);\n    ctx.font = `bold ${fontSize}px Creepster`;\n    ctx.fillStyle = 'white';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    // Measure text width to handle long text\n    const textMetrics = ctx.measureText(text);\n    const textWidth = textMetrics.width;\n    const maxWidth = canvas.width * 0.9; // 90% of canvas width\n\n    // Scale text if it's too wide\n    if (textWidth > maxWidth) {\n      const scale = maxWidth / textWidth;\n      ctx.font = `bold ${Math.floor(fontSize * scale)}px Creepster`;\n    }\n\n    // Draw text in the center\n    ctx.fillText(text, canvas.width / 2, canvas.height / 2);\n    const texture = new THREE.CanvasTexture(canvas);\n    texture.needsUpdate = true;\n\n    // Create shader material\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        time: {\n          value: 0\n        },\n        distortionFactor: {\n          value: 0\n        },\n        mousePos: {\n          value: new THREE.Vector2(0.5, 0.5)\n        },\n        color: {\n          value: new THREE.Color(fill)\n        },\n        textTexture: {\n          value: texture\n        }\n      },\n      vertexShader,\n      fragmentShader,\n      transparent: true\n    });\n    materialRef.current = material;\n\n    // Create mesh with proper aspect ratio\n    const geometry = new THREE.PlaneGeometry(2, 2 / containerAspect);\n    const mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n\n    // Animation loop\n    const animate = () => {\n      if (!material || !renderer || !scene || !camera) return;\n      material.uniforms.time.value += 0.01;\n      material.uniforms.mousePos.value.set(mousePos.current.x, mousePos.current.y);\n      renderer.render(scene, camera);\n      frameRef.current = requestAnimationFrame(animate);\n    };\n    frameRef.current = requestAnimationFrame(animate);\n\n    // Handle mouse movement\n    const handleMouseMove = e => {\n      var _containerRef$current;\n      const rect = (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.getBoundingClientRect();\n      if (!rect) return;\n      mousePos.current = {\n        x: (e.clientX - rect.left) / rect.width,\n        y: 1 - (e.clientY - rect.top) / rect.height\n      };\n      if (materialRef.current) {\n        const dist = Math.hypot(mousePos.current.x - 0.5, mousePos.current.y - 0.5);\n        materialRef.current.uniforms.distortionFactor.value = Math.min(dist * 2, 1);\n      }\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Handle resize\n    const handleResize = () => {\n      if (!containerRef.current || !renderer || !camera) return;\n      const newWidth = containerRef.current.clientWidth;\n      const newHeight = isHeader ? window.innerHeight : containerRef.current.clientHeight;\n      const newAspect = newWidth / newHeight;\n      renderer.setSize(newWidth, newHeight);\n\n      // Update camera aspect\n      camera.left = -1;\n      camera.right = 1;\n      camera.top = 1 / newAspect;\n      camera.bottom = -1 / newAspect;\n      camera.updateProjectionMatrix();\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize(); // Initial resize\n\n    return () => {\n      if (frameRef.current) {\n        cancelAnimationFrame(frameRef.current);\n      }\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('resize', handleResize);\n      renderer.dispose();\n    };\n  }, [text, size, fill, isHeader]);\n  return /*#__PURE__*/_jsxDEV(TextContainer, {\n    ref: containerRef,\n    className: className,\n    $isHeader: isHeader\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 10\n  }, this);\n};\n_s(BlotterText, \"vrgW/8ORVWIid3KcXNHAtQdcfBQ=\");\n_c2 = BlotterText;\nvar _c, _c2;\n$RefreshReg$(_c, \"TextContainer\");\n$RefreshReg$(_c2, \"BlotterText\");","map":{"version":3,"names":["React","useEffect","useRef","styled","THREE","jsxDEV","_jsxDEV","TextContainer","div","props","$isHeader","_c","vertexShader","fragmentShader","BlotterText","text","size","fill","className","isHeader","_s","containerRef","rendererRef","sceneRef","cameraRef","materialRef","mousePos","x","y","frameRef","current","scene","Scene","camera","OrthographicCamera","position","z","renderer","WebGLRenderer","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","clientWidth","clientHeight","firstChild","removeChild","appendChild","domElement","canvas","document","createElement","ctx","getContext","containerAspect","width","height","fillStyle","fillRect","fontSize","Math","floor","font","textAlign","textBaseline","textMetrics","measureText","textWidth","maxWidth","scale","fillText","texture","CanvasTexture","needsUpdate","material","ShaderMaterial","uniforms","time","value","distortionFactor","Vector2","color","Color","textTexture","transparent","geometry","PlaneGeometry","mesh","Mesh","add","animate","set","render","requestAnimationFrame","handleMouseMove","e","_containerRef$current","rect","getBoundingClientRect","clientX","left","clientY","top","dist","hypot","min","addEventListener","handleResize","newWidth","newHeight","innerHeight","newAspect","right","bottom","updateProjectionMatrix","cancelAnimationFrame","removeEventListener","dispose","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/BlotterText.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport * as THREE from 'three';\n\nconst TextContainer = styled.div<{ $isHeader?: boolean }>`\n  width: 100%;\n  height: ${props => props.$isHeader ? '100vh' : 'auto'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  canvas {\n    width: 100% !important;\n    height: ${props => props.$isHeader ? '100vh' : 'auto'} !important;\n    object-fit: contain;\n  }\n`;\n\ninterface BlotterTextProps {\n  text: string;\n  size?: number;\n  fill?: string;\n  className?: string;\n  isHeader?: boolean;\n}\n\nconst vertexShader = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n`;\n\nconst fragmentShader = `\n  uniform float time;\n  uniform float distortionFactor;\n  uniform vec2 mousePos;\n  uniform vec3 color;\n  uniform sampler2D textTexture;\n  varying vec2 vUv;\n\n  void main() {\n    vec2 uv = vUv;\n    \n    // Calculate distance from mouse with larger radius of influence\n    float dist = distance(mousePos, uv);\n    float influence = smoothstep(0.8, 0.0, dist) * distortionFactor;\n    \n    // Create wave effect with increased amplitude\n    float wave = sin(uv.x * 8.0 + time) * 0.08 * influence;\n    uv.y += wave;\n    \n    // Create liquid-like distortion with smoother movement\n    float distortion = sin(uv.x * 4.0 + time * 1.5) * cos(uv.y * 4.0 + time) * influence;\n    uv += distortion * 0.08;\n\n    // Sample the text texture\n    vec4 texColor = texture2D(textTexture, uv);\n    \n    // Mix the text color with our desired color\n    gl_FragColor = vec4(color * texColor.r, texColor.a);\n  }\n`;\n\nexport const BlotterText: React.FC<BlotterTextProps> = ({ \n  text, \n  size = 100,\n  fill = '#fff',\n  className,\n  isHeader = false\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const rendererRef = useRef<THREE.WebGLRenderer | null>(null);\n  const sceneRef = useRef<THREE.Scene | null>(null);\n  const cameraRef = useRef<THREE.OrthographicCamera | null>(null);\n  const materialRef = useRef<THREE.ShaderMaterial | null>(null);\n  const mousePos = useRef<{ x: number; y: number }>({ x: 0.5, y: 0.5 });\n  const frameRef = useRef<number>();\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    // Setup Three.js scene\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Setup camera\n    const camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0.1, 10);\n    camera.position.z = 1;\n    cameraRef.current = camera;\n\n    // Setup renderer\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(containerRef.current.clientWidth, containerRef.current.clientHeight);\n    rendererRef.current = renderer;\n    \n    // Clear container\n    while (containerRef.current.firstChild) {\n      containerRef.current.removeChild(containerRef.current.firstChild);\n    }\n    containerRef.current.appendChild(renderer.domElement);\n\n    // Create text texture\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size based on container size to maintain aspect ratio\n    const containerAspect = containerRef.current.clientWidth / containerRef.current.clientHeight;\n    canvas.width = 2048; // Higher resolution for better text quality\n    canvas.height = canvas.width / containerAspect;\n    \n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    \n    // Calculate font size based on whether it's a header or not\n    const fontSize = isHeader \n      ? Math.floor(canvas.height * 0.25) // Smaller relative size for headers\n      : Math.floor(canvas.height * 0.8);\n    \n    ctx.font = `bold ${fontSize}px Creepster`;\n    ctx.fillStyle = 'white';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    \n    // Measure text width to handle long text\n    const textMetrics = ctx.measureText(text);\n    const textWidth = textMetrics.width;\n    const maxWidth = canvas.width * 0.9; // 90% of canvas width\n    \n    // Scale text if it's too wide\n    if (textWidth > maxWidth) {\n      const scale = maxWidth / textWidth;\n      ctx.font = `bold ${Math.floor(fontSize * scale)}px Creepster`;\n    }\n    \n    // Draw text in the center\n    ctx.fillText(text, canvas.width / 2, canvas.height / 2);\n\n    const texture = new THREE.CanvasTexture(canvas);\n    texture.needsUpdate = true;\n\n    // Create shader material\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        time: { value: 0 },\n        distortionFactor: { value: 0 },\n        mousePos: { value: new THREE.Vector2(0.5, 0.5) },\n        color: { value: new THREE.Color(fill) },\n        textTexture: { value: texture }\n      },\n      vertexShader,\n      fragmentShader,\n      transparent: true\n    });\n    materialRef.current = material;\n\n    // Create mesh with proper aspect ratio\n    const geometry = new THREE.PlaneGeometry(2, 2 / containerAspect);\n    const mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n\n    // Animation loop\n    const animate = () => {\n      if (!material || !renderer || !scene || !camera) return;\n\n      material.uniforms.time.value += 0.01;\n      material.uniforms.mousePos.value.set(mousePos.current.x, mousePos.current.y);\n      \n      renderer.render(scene, camera);\n      frameRef.current = requestAnimationFrame(animate);\n    };\n\n    frameRef.current = requestAnimationFrame(animate);\n\n    // Handle mouse movement\n    const handleMouseMove = (e: MouseEvent) => {\n      const rect = containerRef.current?.getBoundingClientRect();\n      if (!rect) return;\n\n      mousePos.current = {\n        x: (e.clientX - rect.left) / rect.width,\n        y: 1 - (e.clientY - rect.top) / rect.height\n      };\n\n      if (materialRef.current) {\n        const dist = Math.hypot(\n          mousePos.current.x - 0.5,\n          mousePos.current.y - 0.5\n        );\n        materialRef.current.uniforms.distortionFactor.value = Math.min(dist * 2, 1);\n      }\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Handle resize\n    const handleResize = () => {\n      if (!containerRef.current || !renderer || !camera) return;\n      \n      const newWidth = containerRef.current.clientWidth;\n      const newHeight = isHeader ? window.innerHeight : containerRef.current.clientHeight;\n      const newAspect = newWidth / newHeight;\n      \n      renderer.setSize(newWidth, newHeight);\n      \n      // Update camera aspect\n      camera.left = -1;\n      camera.right = 1;\n      camera.top = 1 / newAspect;\n      camera.bottom = -1 / newAspect;\n      camera.updateProjectionMatrix();\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize(); // Initial resize\n\n    return () => {\n      if (frameRef.current) {\n        cancelAnimationFrame(frameRef.current);\n      }\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('resize', handleResize);\n      renderer.dispose();\n    };\n  }, [text, size, fill, isHeader]);\n\n  return <TextContainer ref={containerRef} className={className} $isHeader={isHeader} />;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}