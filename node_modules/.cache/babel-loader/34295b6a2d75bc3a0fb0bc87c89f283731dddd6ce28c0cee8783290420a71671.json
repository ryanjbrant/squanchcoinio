{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/BlotterText.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport * as THREE from 'three';\n\n/**\n * ⚠️ CRITICAL STYLING\n * These styles ensure proper rendering and sizing of the WebGL canvas.\n * The $isHeader prop controls whether the text takes full viewport height.\n * DO NOT modify the width/height calculations or flex properties.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextContainer = styled.div`\n  width: 100%;\n  height: ${props => props.$isHeader ? '100vh' : 'auto'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n  canvas {\n    width: ${props => props.$isHeader ? '150vw' : '100%'} !important;\n    height: ${props => props.$isHeader ? '150vh' : '100%'} !important;\n    object-fit: cover;\n    position: ${props => props.$isHeader ? 'absolute' : 'relative'};\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\n/**\n * Fallback component when WebGL is not available\n * Maintains consistent styling with the WebGL version\n */\n_c = TextContainer;\nconst FallbackText = styled.div`\n  width: 100%;\n  height: ${props => props.$isHeader ? '100vh' : 'auto'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: 'Creepster', cursive;\n  font-size: ${props => props.$isHeader ? '4rem' : '2rem'};\n  color: ${props => props.color || '#fff'};\n`;\n_c2 = FallbackText;\n/**\n * ⚠️ CRITICAL SHADER CODE\n * Basic vertex shader that passes UV coordinates to fragment shader\n * DO NOT modify unless you fully understand WebGL shaders\n */\nconst vertexShader = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n`;\n\n/**\n * ⚠️ CRITICAL SHADER CODE\n * Fragment shader that creates the liquid distortion effect\n * Carefully tuned parameters for stability and performance\n * DO NOT modify the following:\n * - UV clamping\n * - Alpha channel handling\n * - Distortion parameters\n */\nconst fragmentShader = `\n  uniform float time;\n  uniform float distortionFactor;\n  uniform float scrollVelocity;\n  uniform vec2 mousePos;\n  uniform vec3 color;\n  uniform sampler2D textTexture;\n  varying vec2 vUv;\n\n  void main() {\n    vec2 uv = vUv;\n    \n    // Calculate distance from mouse with much smaller radius but sharper falloff\n    float dist = distance(mousePos, uv);\n    float influence = smoothstep(0.1, 0.0, dist) * distortionFactor;\n    influence = pow(influence, 0.7); // Sharper falloff but maintain strength\n    \n    // Add scroll-based stretching effect with limited magnitude (max 10% stretch)\n    float scrollStretch = scrollVelocity * 0.05 * (1.0 - uv.y);\n    scrollStretch *= 1.0 + sin(uv.y * 3.14159 * 2.0) * 0.5;\n    scrollStretch = clamp(scrollStretch, -0.1, 0.1);\n    uv.y += scrollStretch;\n    \n    // Add minimal horizontal wave distortion during scroll\n    float scrollWave = sin(uv.y * 20.0 + time * 2.0) * scrollVelocity * 0.005;\n    uv.x += scrollWave;\n    \n    // Create more intense wave effect with higher frequency (mouse interaction)\n    float wave = sin(uv.x * 30.0 + time) * 0.06 * influence;\n    wave += cos(uv.y * 25.0 + time * 0.8) * 0.04 * influence;\n    uv.y += wave;\n    \n    // Create more detailed liquid-like distortion\n    float distortion = sin(uv.x * 20.0 + time * 1.5) * cos(uv.y * 15.0 + time) * influence;\n    distortion += sin(uv.y * 12.0 - time) * 0.02 * influence;\n    uv += distortion * 0.05;\n\n    // Add a tighter ripple effect\n    float ripple = sin(dist * 50.0 - time * 3.0) * 0.03 * influence;\n    uv += ripple;\n\n    // Sample the text texture with clamping\n    vec2 clampedUv = clamp(uv, 0.0, 1.0);\n    vec4 texColor = texture2D(textTexture, clampedUv);\n    \n    // Use the red channel as alpha (since we drew white text on black)\n    float alpha = texColor.r;\n    \n    // Output final color\n    gl_FragColor = vec4(color, alpha);\n  }\n`;\n\n/**\n * ⚠️ CRITICAL INITIALIZATION\n * Static WebGL availability check\n * DO NOT modify this check as it's essential for fallback handling\n */\nconst webGLAvailable = (() => {\n  try {\n    const canvas = document.createElement('canvas');\n    return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * ⚠️ CRITICAL UTILITY\n * Color parsing utility that handles rgba values\n * Essential for proper color handling in WebGL\n */\nconst parseRGBA = color => {\n  if (color.startsWith('rgba')) {\n    const matches = color.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)/);\n    if (matches) {\n      return `rgb(${matches[1]}, ${matches[2]}, ${matches[3]})`;\n    }\n  }\n  return color;\n};\n\n/**\n * Simple font loading check using document.fonts API\n */\nconst checkFontLoaded = async fontFamily => {\n  if ('fonts' in document) {\n    try {\n      await document.fonts.load(`1em ${fontFamily}`);\n      return document.fonts.check(`1em ${fontFamily}`);\n    } catch (e) {\n      console.warn('Font loading check failed:', e);\n      return true; // Continue anyway\n    }\n  }\n  return true; // If document.fonts is not supported, assume font is loaded\n};\n\n/**\n * Utility function for smooth interpolation\n */\nconst lerp = (start, end, factor) => {\n  return start + (end - start) * factor;\n};\n\n// Add error boundary component\nclass WebGLErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.warn('WebGL Error:', error);\n  }\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n    return this.props.children;\n  }\n}\nexport const BlotterText = ({\n  text,\n  size = 100,\n  fill = '#fff',\n  className,\n  isHeader = false\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const rendererRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const materialRef = useRef(null);\n  const mousePos = useRef({\n    x: 0.5,\n    y: 0.5\n  });\n  const frameRef = useRef();\n  const lastScrollY = useRef(window.scrollY);\n  const scrollVelocity = useRef(0);\n  const targetScrollVelocity = useRef(0);\n  const [hasError, setHasError] = useState(!webGLAvailable);\n  const [fontLoaded, setFontLoaded] = useState(false);\n\n  // Add check for browser environment\n  const isBrowser = typeof window !== 'undefined' && window.document;\n  useEffect(() => {\n    if (!isBrowser) return;\n    let mounted = true;\n    const loadFont = async () => {\n      try {\n        await checkFontLoaded('Creepster');\n        if (mounted) {\n          setFontLoaded(true);\n        }\n      } catch (error) {\n        console.warn('Font loading failed:', error);\n        if (mounted) {\n          setFontLoaded(true);\n        }\n      }\n    };\n    loadFont();\n    return () => {\n      mounted = false;\n    };\n  }, [isBrowser]);\n  useEffect(() => {\n    if (!isBrowser || !containerRef.current || hasError || !fontLoaded) return;\n    let isDestroyed = false;\n    try {\n      // Cleanup previous instance if it exists\n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n        rendererRef.current = null;\n      }\n\n      // Verify DOM is available\n      if (!document.body.contains(containerRef.current)) {\n        return;\n      }\n\n      // Get initial dimensions\n      const initialWidth = containerRef.current.clientWidth || window.innerWidth;\n      const initialHeight = isHeader ? window.innerHeight : containerRef.current.clientHeight || window.innerHeight;\n      if (initialWidth === 0 || initialHeight === 0) {\n        console.error('Invalid container dimensions');\n        setHasError(true);\n        return;\n      }\n\n      // Setup Three.js scene\n      const scene = new THREE.Scene();\n      sceneRef.current = scene;\n\n      // Setup camera\n      const camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0.1, 10);\n      camera.position.z = 1;\n      cameraRef.current = camera;\n\n      // Setup renderer with error handling\n      const renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true,\n        powerPreference: 'default',\n        preserveDrawingBuffer: false,\n        failIfMajorPerformanceCaveat: true\n      });\n\n      // Verify WebGL context\n      const gl = renderer.getContext();\n      if (!gl) {\n        throw new Error('Failed to get WebGL context');\n      }\n\n      // Create text texture first\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d', {\n        alpha: true\n      });\n      if (!ctx) {\n        throw new Error('Failed to get 2D context');\n      }\n\n      // Set canvas size based on container size\n      const containerAspect = initialWidth / initialHeight;\n\n      // Use larger power-of-two dimensions for textures\n      const minSize = 2048; // Increased from 512 to 2048\n      const textureWidth = Math.max(minSize, Math.pow(2, Math.ceil(Math.log2(Math.min(8192, initialWidth * 2)))));\n      const textureHeight = Math.max(minSize, Math.pow(2, Math.ceil(Math.log2(textureWidth / containerAspect))));\n      canvas.width = textureWidth;\n      canvas.height = textureHeight;\n\n      // Fill canvas with black background\n      ctx.fillStyle = '#000000';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Calculate and set font size for huge text\n      const fontSize = isHeader ? Math.floor(canvas.height * 3.0) // Increased from 2.0 to 3.0\n      : Math.floor(canvas.height * 0.8);\n      ctx.font = `bold ${fontSize}px Creepster`;\n      ctx.fillStyle = '#ffffff';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n\n      // Measure and scale text if needed\n      const textMetrics = ctx.measureText(text);\n      const textWidth = textMetrics.width;\n      const maxWidth = canvas.width * (isHeader ? 3.0 : 0.9); // Increased from 2.0 to 3.0\n\n      if (textWidth > maxWidth) {\n        const scale = maxWidth / textWidth;\n        ctx.font = `bold ${Math.floor(fontSize * scale)}px Creepster`;\n      }\n\n      // Draw text\n      ctx.fillText(text, canvas.width / 2, canvas.height / 2);\n\n      // Create texture\n      const texture = new THREE.Texture(canvas);\n      texture.needsUpdate = true;\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      texture.format = THREE.RGBAFormat;\n      texture.type = THREE.UnsignedByteType;\n\n      // Initialize renderer\n      renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n      renderer.setSize(initialWidth, initialHeight);\n\n      // Clear container and append canvas\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n      containerRef.current.appendChild(renderer.domElement);\n\n      // Create material after texture is ready\n      const material = new THREE.ShaderMaterial({\n        uniforms: {\n          time: {\n            value: 0\n          },\n          distortionFactor: {\n            value: 0\n          },\n          scrollVelocity: {\n            value: 0\n          },\n          mousePos: {\n            value: new THREE.Vector2(0.5, 0.5)\n          },\n          color: {\n            value: new THREE.Color(fill)\n          },\n          textTexture: {\n            value: texture\n          }\n        },\n        vertexShader,\n        fragmentShader,\n        transparent: true,\n        depthWrite: false,\n        depthTest: false\n      });\n      materialRef.current = material;\n\n      // Create mesh with proper aspect ratio\n      const geometry = new THREE.PlaneGeometry(2, 2 / containerAspect);\n      const mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n      let lastTime = performance.now();\n      let deltaTime = 0;\n      const animate = () => {\n        if (isDestroyed || !material || !renderer || !scene || !camera) return;\n        try {\n          const currentTime = performance.now();\n          deltaTime = (currentTime - lastTime) / 1000;\n          lastTime = currentTime;\n          scrollVelocity.current = lerp(scrollVelocity.current, targetScrollVelocity.current, Math.min(1, deltaTime * 4));\n          material.uniforms.time.value += deltaTime;\n          material.uniforms.mousePos.value.set(mousePos.current.x, mousePos.current.y);\n          material.uniforms.scrollVelocity.value = scrollVelocity.current;\n          targetScrollVelocity.current *= Math.pow(0.98, deltaTime * 60);\n          renderer.render(scene, camera);\n          frameRef.current = requestAnimationFrame(animate);\n        } catch (error) {\n          console.warn('Animation error:', error);\n          isDestroyed = true;\n        }\n      };\n      frameRef.current = requestAnimationFrame(animate);\n\n      // Handle mouse movement\n      const handleMouseMove = e => {\n        var _containerRef$current;\n        const rect = (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.getBoundingClientRect();\n        if (!rect) return;\n        mousePos.current = {\n          x: (e.clientX - rect.left) / rect.width,\n          y: 1 - (e.clientY - rect.top) / rect.height\n        };\n        if (materialRef.current) {\n          const dist = Math.hypot(mousePos.current.x - 0.5, mousePos.current.y - 0.5);\n          // Increase maximum distortion for more intense effect\n          materialRef.current.uniforms.distortionFactor.value = Math.min(dist * 4, 2.0);\n        }\n      };\n      window.addEventListener('mousemove', handleMouseMove);\n\n      // Handle resize\n      const handleResize = () => {\n        if (!containerRef.current || !renderer || !camera) return;\n        const newWidth = containerRef.current.clientWidth;\n        const newHeight = isHeader ? window.innerHeight : containerRef.current.clientHeight;\n        const newAspect = newWidth / newHeight;\n        renderer.setSize(newWidth, newHeight);\n        camera.left = -1;\n        camera.right = 1;\n        camera.top = 1 / newAspect;\n        camera.bottom = -1 / newAspect;\n        camera.updateProjectionMatrix();\n      };\n      window.addEventListener('resize', handleResize);\n      handleResize();\n\n      // Improved scroll handler with better velocity calculation\n      let lastScrollTime = performance.now();\n      let lastScrollDelta = 0;\n      const handleScroll = () => {\n        const currentScrollY = window.scrollY;\n        const currentTime = performance.now();\n        const timeDelta = (currentTime - lastScrollTime) / 1000; // Convert to seconds\n        const scrollDelta = currentScrollY - lastScrollY.current;\n        if (timeDelta > 0) {\n          // Calculate instantaneous velocity with reduced sensitivity\n          const instantVelocity = scrollDelta / timeDelta / window.innerHeight;\n\n          // Smooth out sudden changes in velocity\n          const smoothedVelocity = lerp(lastScrollDelta / timeDelta / window.innerHeight, instantVelocity, 0.3); // Reduced from 0.5\n\n          // Update target velocity with reduced clamping\n          targetScrollVelocity.current = Math.max(-1.5, Math.min(1.5, smoothedVelocity)); // Reduced from ±4 to ±1.5\n\n          lastScrollDelta = scrollDelta;\n          lastScrollTime = currentTime;\n        }\n        lastScrollY.current = currentScrollY;\n      };\n\n      // Add scroll listener\n      window.addEventListener('scroll', handleScroll, {\n        passive: true\n      });\n\n      // Handle WebGL context loss\n      const handleContextLost = () => {\n        isDestroyed = true;\n        setHasError(true);\n      };\n      const handleContextRestored = () => {\n        isDestroyed = false;\n        setHasError(false);\n      };\n      renderer.domElement.addEventListener('webglcontextlost', handleContextLost);\n      renderer.domElement.addEventListener('webglcontextrestored', handleContextRestored);\n      return () => {\n        isDestroyed = true;\n        if (frameRef.current) {\n          cancelAnimationFrame(frameRef.current);\n        }\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('resize', handleResize);\n        window.removeEventListener('scroll', handleScroll);\n        renderer.domElement.removeEventListener('webglcontextlost', handleContextLost);\n        renderer.domElement.removeEventListener('webglcontextrestored', handleContextRestored);\n        renderer.dispose();\n        geometry.dispose();\n        material.dispose();\n        texture.dispose();\n      };\n    } catch (e) {\n      console.error('Setup error:', e);\n      setHasError(true);\n    }\n  }, [text, size, fill, isHeader, hasError, fontLoaded, isBrowser]);\n  if (!isBrowser || !fontLoaded || hasError) {\n    return /*#__PURE__*/_jsxDEV(FallbackText, {\n      $isHeader: isHeader,\n      className: className,\n      color: fill,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(WebGLErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(TextContainer, {\n      ref: containerRef,\n      className: className,\n      $isHeader: isHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 546,\n    columnNumber: 5\n  }, this);\n};\n_s(BlotterText, \"8SwJS/EGpH+psIAaYTfxxScf4UA=\");\n_c3 = BlotterText;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TextContainer\");\n$RefreshReg$(_c2, \"FallbackText\");\n$RefreshReg$(_c3, \"BlotterText\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","THREE","jsxDEV","_jsxDEV","TextContainer","div","props","$isHeader","_c","FallbackText","color","_c2","vertexShader","fragmentShader","webGLAvailable","canvas","document","createElement","window","WebGLRenderingContext","getContext","e","parseRGBA","startsWith","matches","match","checkFontLoaded","fontFamily","fonts","load","check","console","warn","lerp","start","end","factor","WebGLErrorBoundary","Component","constructor","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","render","children","BlotterText","text","size","fill","className","isHeader","_s","containerRef","rendererRef","sceneRef","cameraRef","materialRef","mousePos","x","y","frameRef","lastScrollY","scrollY","scrollVelocity","targetScrollVelocity","setHasError","fontLoaded","setFontLoaded","isBrowser","mounted","loadFont","current","isDestroyed","dispose","body","contains","initialWidth","clientWidth","innerWidth","initialHeight","innerHeight","clientHeight","scene","Scene","camera","OrthographicCamera","position","z","renderer","WebGLRenderer","antialias","alpha","powerPreference","preserveDrawingBuffer","failIfMajorPerformanceCaveat","gl","Error","ctx","containerAspect","minSize","textureWidth","Math","max","pow","ceil","log2","min","textureHeight","width","height","fillStyle","fillRect","fontSize","floor","font","textAlign","textBaseline","textMetrics","measureText","textWidth","maxWidth","scale","fillText","texture","Texture","needsUpdate","minFilter","LinearFilter","magFilter","format","RGBAFormat","type","UnsignedByteType","setPixelRatio","devicePixelRatio","setSize","firstChild","removeChild","appendChild","domElement","material","ShaderMaterial","uniforms","time","value","distortionFactor","Vector2","Color","textTexture","transparent","depthWrite","depthTest","geometry","PlaneGeometry","mesh","Mesh","add","lastTime","performance","now","deltaTime","animate","currentTime","set","requestAnimationFrame","handleMouseMove","_containerRef$current","rect","getBoundingClientRect","clientX","left","clientY","top","dist","hypot","addEventListener","handleResize","newWidth","newHeight","newAspect","right","bottom","updateProjectionMatrix","lastScrollTime","lastScrollDelta","handleScroll","currentScrollY","timeDelta","scrollDelta","instantVelocity","smoothedVelocity","passive","handleContextLost","handleContextRestored","cancelAnimationFrame","removeEventListener","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c3","$RefreshReg$"],"sources":["/Users/ryan/H3M Dropbox/Ryan Brant/repos/squanchcoin/src/components/BlotterText.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport * as THREE from 'three';\n\n/**\n * ⚠️ CRITICAL STYLING\n * These styles ensure proper rendering and sizing of the WebGL canvas.\n * The $isHeader prop controls whether the text takes full viewport height.\n * DO NOT modify the width/height calculations or flex properties.\n */\nconst TextContainer = styled.div<{ $isHeader?: boolean }>`\n  width: 100%;\n  height: ${props => props.$isHeader ? '100vh' : 'auto'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n  canvas {\n    width: ${props => props.$isHeader ? '150vw' : '100%'} !important;\n    height: ${props => props.$isHeader ? '150vh' : '100%'} !important;\n    object-fit: cover;\n    position: ${props => props.$isHeader ? 'absolute' : 'relative'};\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\n/**\n * Fallback component when WebGL is not available\n * Maintains consistent styling with the WebGL version\n */\nconst FallbackText = styled.div<{ $isHeader?: boolean }>`\n  width: 100%;\n  height: ${props => props.$isHeader ? '100vh' : 'auto'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: 'Creepster', cursive;\n  font-size: ${props => props.$isHeader ? '4rem' : '2rem'};\n  color: ${props => props.color || '#fff'};\n`;\n\ninterface BlotterTextProps {\n  text: string;\n  size?: number;\n  fill?: string;\n  className?: string;\n  isHeader?: boolean;\n}\n\n/**\n * ⚠️ CRITICAL SHADER CODE\n * Basic vertex shader that passes UV coordinates to fragment shader\n * DO NOT modify unless you fully understand WebGL shaders\n */\nconst vertexShader = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n`;\n\n/**\n * ⚠️ CRITICAL SHADER CODE\n * Fragment shader that creates the liquid distortion effect\n * Carefully tuned parameters for stability and performance\n * DO NOT modify the following:\n * - UV clamping\n * - Alpha channel handling\n * - Distortion parameters\n */\nconst fragmentShader = `\n  uniform float time;\n  uniform float distortionFactor;\n  uniform float scrollVelocity;\n  uniform vec2 mousePos;\n  uniform vec3 color;\n  uniform sampler2D textTexture;\n  varying vec2 vUv;\n\n  void main() {\n    vec2 uv = vUv;\n    \n    // Calculate distance from mouse with much smaller radius but sharper falloff\n    float dist = distance(mousePos, uv);\n    float influence = smoothstep(0.1, 0.0, dist) * distortionFactor;\n    influence = pow(influence, 0.7); // Sharper falloff but maintain strength\n    \n    // Add scroll-based stretching effect with limited magnitude (max 10% stretch)\n    float scrollStretch = scrollVelocity * 0.05 * (1.0 - uv.y);\n    scrollStretch *= 1.0 + sin(uv.y * 3.14159 * 2.0) * 0.5;\n    scrollStretch = clamp(scrollStretch, -0.1, 0.1);\n    uv.y += scrollStretch;\n    \n    // Add minimal horizontal wave distortion during scroll\n    float scrollWave = sin(uv.y * 20.0 + time * 2.0) * scrollVelocity * 0.005;\n    uv.x += scrollWave;\n    \n    // Create more intense wave effect with higher frequency (mouse interaction)\n    float wave = sin(uv.x * 30.0 + time) * 0.06 * influence;\n    wave += cos(uv.y * 25.0 + time * 0.8) * 0.04 * influence;\n    uv.y += wave;\n    \n    // Create more detailed liquid-like distortion\n    float distortion = sin(uv.x * 20.0 + time * 1.5) * cos(uv.y * 15.0 + time) * influence;\n    distortion += sin(uv.y * 12.0 - time) * 0.02 * influence;\n    uv += distortion * 0.05;\n\n    // Add a tighter ripple effect\n    float ripple = sin(dist * 50.0 - time * 3.0) * 0.03 * influence;\n    uv += ripple;\n\n    // Sample the text texture with clamping\n    vec2 clampedUv = clamp(uv, 0.0, 1.0);\n    vec4 texColor = texture2D(textTexture, clampedUv);\n    \n    // Use the red channel as alpha (since we drew white text on black)\n    float alpha = texColor.r;\n    \n    // Output final color\n    gl_FragColor = vec4(color, alpha);\n  }\n`;\n\n/**\n * ⚠️ CRITICAL INITIALIZATION\n * Static WebGL availability check\n * DO NOT modify this check as it's essential for fallback handling\n */\nconst webGLAvailable = (() => {\n  try {\n    const canvas = document.createElement('canvas');\n    return !!(window.WebGLRenderingContext && \n      (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * ⚠️ CRITICAL UTILITY\n * Color parsing utility that handles rgba values\n * Essential for proper color handling in WebGL\n */\nconst parseRGBA = (color: string): string => {\n  if (color.startsWith('rgba')) {\n    const matches = color.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)/);\n    if (matches) {\n      return `rgb(${matches[1]}, ${matches[2]}, ${matches[3]})`;\n    }\n  }\n  return color;\n};\n\n/**\n * Simple font loading check using document.fonts API\n */\nconst checkFontLoaded = async (fontFamily: string): Promise<boolean> => {\n  if ('fonts' in document) {\n    try {\n      await document.fonts.load(`1em ${fontFamily}`);\n      return document.fonts.check(`1em ${fontFamily}`);\n    } catch (e) {\n      console.warn('Font loading check failed:', e);\n      return true; // Continue anyway\n    }\n  }\n  return true; // If document.fonts is not supported, assume font is loaded\n};\n\n/**\n * Utility function for smooth interpolation\n */\nconst lerp = (start: number, end: number, factor: number) => {\n  return start + (end - start) * factor;\n};\n\n// Add error boundary component\nclass WebGLErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.warn('WebGL Error:', error);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n    return this.props.children;\n  }\n}\n\nexport const BlotterText: React.FC<BlotterTextProps> = ({ \n  text, \n  size = 100,\n  fill = '#fff',\n  className,\n  isHeader = false\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const rendererRef = useRef<THREE.WebGLRenderer | null>(null);\n  const sceneRef = useRef<THREE.Scene | null>(null);\n  const cameraRef = useRef<THREE.OrthographicCamera | null>(null);\n  const materialRef = useRef<THREE.ShaderMaterial | null>(null);\n  const mousePos = useRef<{ x: number; y: number }>({ x: 0.5, y: 0.5 });\n  const frameRef = useRef<number>();\n  const lastScrollY = useRef(window.scrollY);\n  const scrollVelocity = useRef(0);\n  const targetScrollVelocity = useRef(0);\n  const [hasError, setHasError] = useState(!webGLAvailable);\n  const [fontLoaded, setFontLoaded] = useState(false);\n\n  // Add check for browser environment\n  const isBrowser = typeof window !== 'undefined' && window.document;\n\n  useEffect(() => {\n    if (!isBrowser) return;\n    \n    let mounted = true;\n\n    const loadFont = async () => {\n      try {\n        await checkFontLoaded('Creepster');\n        if (mounted) {\n          setFontLoaded(true);\n        }\n      } catch (error) {\n        console.warn('Font loading failed:', error);\n        if (mounted) {\n          setFontLoaded(true);\n        }\n      }\n    };\n\n    loadFont();\n\n    return () => {\n      mounted = false;\n    };\n  }, [isBrowser]);\n\n  useEffect(() => {\n    if (!isBrowser || !containerRef.current || hasError || !fontLoaded) return;\n\n    let isDestroyed = false;\n\n    try {\n      // Cleanup previous instance if it exists\n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n        rendererRef.current = null;\n      }\n\n      // Verify DOM is available\n      if (!document.body.contains(containerRef.current)) {\n        return;\n      }\n\n      // Get initial dimensions\n      const initialWidth = containerRef.current.clientWidth || window.innerWidth;\n      const initialHeight = isHeader ? window.innerHeight : (containerRef.current.clientHeight || window.innerHeight);\n      \n      if (initialWidth === 0 || initialHeight === 0) {\n        console.error('Invalid container dimensions');\n        setHasError(true);\n        return;\n      }\n\n      // Setup Three.js scene\n      const scene = new THREE.Scene();\n      sceneRef.current = scene;\n\n      // Setup camera\n      const camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0.1, 10);\n      camera.position.z = 1;\n      cameraRef.current = camera;\n\n      // Setup renderer with error handling\n      const renderer = new THREE.WebGLRenderer({ \n        antialias: true, \n        alpha: true,\n        powerPreference: 'default',\n        preserveDrawingBuffer: false,\n        failIfMajorPerformanceCaveat: true\n      });\n\n      // Verify WebGL context\n      const gl = renderer.getContext();\n      if (!gl) {\n        throw new Error('Failed to get WebGL context');\n      }\n\n      // Create text texture first\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d', { alpha: true });\n      if (!ctx) {\n        throw new Error('Failed to get 2D context');\n      }\n\n      // Set canvas size based on container size\n      const containerAspect = initialWidth / initialHeight;\n      \n      // Use larger power-of-two dimensions for textures\n      const minSize = 2048; // Increased from 512 to 2048\n      const textureWidth = Math.max(minSize, Math.pow(2, Math.ceil(Math.log2(Math.min(8192, initialWidth * 2)))));\n      const textureHeight = Math.max(minSize, Math.pow(2, Math.ceil(Math.log2(textureWidth / containerAspect))));\n      \n      canvas.width = textureWidth;\n      canvas.height = textureHeight;\n      \n      // Fill canvas with black background\n      ctx.fillStyle = '#000000';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      \n      // Calculate and set font size for huge text\n      const fontSize = isHeader \n        ? Math.floor(canvas.height * 3.0) // Increased from 2.0 to 3.0\n        : Math.floor(canvas.height * 0.8);\n      \n      ctx.font = `bold ${fontSize}px Creepster`;\n      ctx.fillStyle = '#ffffff';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      \n      // Measure and scale text if needed\n      const textMetrics = ctx.measureText(text);\n      const textWidth = textMetrics.width;\n      const maxWidth = canvas.width * (isHeader ? 3.0 : 0.9); // Increased from 2.0 to 3.0\n      \n      if (textWidth > maxWidth) {\n        const scale = maxWidth / textWidth;\n        ctx.font = `bold ${Math.floor(fontSize * scale)}px Creepster`;\n      }\n      \n      // Draw text\n      ctx.fillText(text, canvas.width / 2, canvas.height / 2);\n\n      // Create texture\n      const texture = new THREE.Texture(canvas);\n      texture.needsUpdate = true;\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      texture.format = THREE.RGBAFormat;\n      texture.type = THREE.UnsignedByteType;\n\n      // Initialize renderer\n      renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n      renderer.setSize(initialWidth, initialHeight);\n      \n      // Clear container and append canvas\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n      containerRef.current.appendChild(renderer.domElement);\n\n      // Create material after texture is ready\n      const material = new THREE.ShaderMaterial({\n        uniforms: {\n          time: { value: 0 },\n          distortionFactor: { value: 0 },\n          scrollVelocity: { value: 0 },\n          mousePos: { value: new THREE.Vector2(0.5, 0.5) },\n          color: { value: new THREE.Color(fill) },\n          textTexture: { value: texture }\n        },\n        vertexShader,\n        fragmentShader,\n        transparent: true,\n        depthWrite: false,\n        depthTest: false\n      });\n      materialRef.current = material;\n\n      // Create mesh with proper aspect ratio\n      const geometry = new THREE.PlaneGeometry(2, 2 / containerAspect);\n      const mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n\n      let lastTime = performance.now();\n      let deltaTime = 0;\n      \n      const animate = () => {\n        if (isDestroyed || !material || !renderer || !scene || !camera) return;\n        \n        try {\n          const currentTime = performance.now();\n          deltaTime = (currentTime - lastTime) / 1000;\n          lastTime = currentTime;\n\n          scrollVelocity.current = lerp(\n            scrollVelocity.current,\n            targetScrollVelocity.current,\n            Math.min(1, deltaTime * 4)\n          );\n\n          material.uniforms.time.value += deltaTime;\n          material.uniforms.mousePos.value.set(mousePos.current.x, mousePos.current.y);\n          material.uniforms.scrollVelocity.value = scrollVelocity.current;\n          \n          targetScrollVelocity.current *= Math.pow(0.98, deltaTime * 60);\n          \n          renderer.render(scene, camera);\n          frameRef.current = requestAnimationFrame(animate);\n        } catch (error) {\n          console.warn('Animation error:', error);\n          isDestroyed = true;\n        }\n      };\n\n      frameRef.current = requestAnimationFrame(animate);\n\n      // Handle mouse movement\n      const handleMouseMove = (e: MouseEvent) => {\n        const rect = containerRef.current?.getBoundingClientRect();\n        if (!rect) return;\n\n        mousePos.current = {\n          x: (e.clientX - rect.left) / rect.width,\n          y: 1 - (e.clientY - rect.top) / rect.height\n        };\n\n        if (materialRef.current) {\n          const dist = Math.hypot(\n            mousePos.current.x - 0.5,\n            mousePos.current.y - 0.5\n          );\n          // Increase maximum distortion for more intense effect\n          materialRef.current.uniforms.distortionFactor.value = Math.min(dist * 4, 2.0);\n        }\n      };\n\n      window.addEventListener('mousemove', handleMouseMove);\n\n      // Handle resize\n      const handleResize = () => {\n        if (!containerRef.current || !renderer || !camera) return;\n        \n        const newWidth = containerRef.current.clientWidth;\n        const newHeight = isHeader ? window.innerHeight : containerRef.current.clientHeight;\n        const newAspect = newWidth / newHeight;\n        \n        renderer.setSize(newWidth, newHeight);\n        \n        camera.left = -1;\n        camera.right = 1;\n        camera.top = 1 / newAspect;\n        camera.bottom = -1 / newAspect;\n        camera.updateProjectionMatrix();\n      };\n\n      window.addEventListener('resize', handleResize);\n      handleResize();\n\n      // Improved scroll handler with better velocity calculation\n      let lastScrollTime = performance.now();\n      let lastScrollDelta = 0;\n      \n      const handleScroll = () => {\n        const currentScrollY = window.scrollY;\n        const currentTime = performance.now();\n        const timeDelta = (currentTime - lastScrollTime) / 1000; // Convert to seconds\n        const scrollDelta = currentScrollY - lastScrollY.current;\n        \n        if (timeDelta > 0) {\n          // Calculate instantaneous velocity with reduced sensitivity\n          const instantVelocity = scrollDelta / timeDelta / window.innerHeight;\n          \n          // Smooth out sudden changes in velocity\n          const smoothedVelocity = lerp(lastScrollDelta / timeDelta / window.innerHeight, instantVelocity, 0.3); // Reduced from 0.5\n          \n          // Update target velocity with reduced clamping\n          targetScrollVelocity.current = Math.max(-1.5, Math.min(1.5, smoothedVelocity)); // Reduced from ±4 to ±1.5\n          \n          lastScrollDelta = scrollDelta;\n          lastScrollTime = currentTime;\n        }\n        \n        lastScrollY.current = currentScrollY;\n      };\n\n      // Add scroll listener\n      window.addEventListener('scroll', handleScroll, { passive: true });\n\n      // Handle WebGL context loss\n      const handleContextLost = () => {\n        isDestroyed = true;\n        setHasError(true);\n      };\n\n      const handleContextRestored = () => {\n        isDestroyed = false;\n        setHasError(false);\n      };\n\n      renderer.domElement.addEventListener('webglcontextlost', handleContextLost);\n      renderer.domElement.addEventListener('webglcontextrestored', handleContextRestored);\n\n      return () => {\n        isDestroyed = true;\n        if (frameRef.current) {\n          cancelAnimationFrame(frameRef.current);\n        }\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('resize', handleResize);\n        window.removeEventListener('scroll', handleScroll);\n        renderer.domElement.removeEventListener('webglcontextlost', handleContextLost);\n        renderer.domElement.removeEventListener('webglcontextrestored', handleContextRestored);\n        renderer.dispose();\n        geometry.dispose();\n        material.dispose();\n        texture.dispose();\n      };\n    } catch (e) {\n      console.error('Setup error:', e);\n      setHasError(true);\n    }\n  }, [text, size, fill, isHeader, hasError, fontLoaded, isBrowser]);\n\n  if (!isBrowser || !fontLoaded || hasError) {\n    return (\n      <FallbackText \n        $isHeader={isHeader} \n        className={className}\n        color={fill}\n      >\n        {text}\n      </FallbackText>\n    );\n  }\n\n  return (\n    <WebGLErrorBoundary>\n      <TextContainer ref={containerRef} className={className} $isHeader={isHeader} />\n    </WebGLErrorBoundary>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}